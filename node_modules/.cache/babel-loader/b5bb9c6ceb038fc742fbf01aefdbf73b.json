{"ast":null,"code":"var _jsxFileName = \"/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/src/OpenGrid.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './OpenGrid.css';\nexport default function OpenGrid() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh']);\n  const [newPlayerInput, setNewPlayerInput] = useState('');\n  const [columns, setColumns] = useState(8);\n  const [minPlayers, setMinPlayers] = useState(1);\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1);\n  const [sliderPosition, setSliderPosition] = useState(-1);\n  const [sliderActive, setSliderActive] = useState(false);\n  const [sliderDuration, setSliderDuration] = useState(30);\n  const [generatedTable, setGeneratedTable] = useState([]);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [settingsCollapsed, setSettingsCollapsed] = useState(false);\n  const [cueMode, setCueMode] = useState('none'); // 'none', 'player', or 'timed'\n  const [playerCues, setPlayerCues] = useState([]);\n  const [progressBarPosition, setProgressBarPosition] = useState(0);\n  const [pacingMode, setPacingMode] = useState('even'); // 'even' or 'uneven'\n  const [columnDurations, setColumnDurations] = useState([]);\n  const sliderInterval = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable();\n    generateColumnDurations();\n  }, [playerNames, columns, pacingMode, sliderDuration]);\n\n  // Generate column durations based on pacing mode\n  const generateColumnDurations = () => {\n    if (columns <= 1) return;\n    const totalDuration = sliderDuration;\n    const columnCount = columns - 1; // Exclude player column\n\n    if (pacingMode === 'even') {\n      // Even distribution\n      const evenDuration = totalDuration / columnCount;\n      setColumnDurations(Array(columnCount).fill(evenDuration));\n    } else {\n      // Uneven distribution\n      const durations = [];\n      let remainingDuration = totalDuration;\n      for (let i = 0; i < columnCount - 1; i++) {\n        // Random duration between 0.5 and 1.5 times the average duration\n        const avgDuration = remainingDuration / (columnCount - i);\n        const duration = avgDuration * (0.5 + Math.random());\n        durations.push(duration);\n        remainingDuration -= duration;\n      }\n\n      // Add the remaining duration to the last column\n      durations.push(remainingDuration);\n      setColumnDurations(durations);\n    }\n  };\n\n  // Get cumulative duration at each column\n  const getCumulativeDurations = () => {\n    const cumulative = [0]; // Start with 0\n    let sum = 0;\n    for (let i = 0; i < columnDurations.length; i++) {\n      sum += columnDurations[i];\n      cumulative.push(sum);\n    }\n    return cumulative;\n  };\n\n  // Slider animation for timed cues\n  useEffect(() => {\n    if (sliderActive && cueMode === 'timed') {\n      const startTime = Date.now();\n      const cumulativeDurations = getCumulativeDurations();\n      sliderInterval.current = setInterval(() => {\n        const elapsedTime = (Date.now() - startTime) / 1000;\n        if (elapsedTime >= sliderDuration) {\n          setSliderPosition(-1);\n          setProgressBarPosition(0);\n          setSliderActive(false);\n          clearInterval(sliderInterval.current);\n          return;\n        }\n\n        // Calculate current column and progress\n        let currentColIndex = 0;\n        for (let i = 1; i < cumulativeDurations.length; i++) {\n          if (elapsedTime >= cumulativeDurations[i - 1] && elapsedTime < cumulativeDurations[i]) {\n            currentColIndex = i;\n            break;\n          }\n        }\n\n        // Update slider position (adjust by +1 to account for player column)\n        setSliderPosition(currentColIndex);\n\n        // Calculate progress bar position (0 to 100%)\n        const progress = elapsedTime / sliderDuration;\n        setProgressBarPosition(progress * 100);\n      }, 33); // ~30 fps update\n    } else if (!sliderActive && sliderInterval.current) {\n      clearInterval(sliderInterval.current);\n    }\n    return () => {\n      if (sliderInterval.current) clearInterval(sliderInterval.current);\n    };\n  }, [sliderActive, cueMode, sliderDuration, columnDurations]);\n\n  // Add a progress bar component below table\n  {\n    cueMode === 'timed' && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        width: `${progressBarPosition}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  // Update player cues when table changes\n  useEffect(() => {\n    if (cueMode === 'player') {\n      calculatePlayerCues();\n    } else {\n      setPlayerCues([]);\n    }\n  }, [generatedTable, cueMode]);\n\n  // Calculate which cells should have player cues\n  const calculatePlayerCues = () => {\n    const cues = [];\n\n    // Start from the second column (index 1)\n    for (let col = 1; col < columns; col++) {\n      const colChanges = [];\n      for (let row = 0; row < playerNames.length; row++) {\n        const currentState = generatedTable[row][col] ? true : false;\n        const previousState = generatedTable[row][col - 1] ? true : false;\n\n        // If player state changed (on to off, or off to on)\n        if (currentState !== previousState) {\n          colChanges.push(row);\n        }\n      }\n\n      // If there are changes, select one player to be the cue\n      if (colChanges.length > 0) {\n        // Randomly select one player who changed state\n        const randomIndex = Math.floor(Math.random() * colChanges.length);\n        cues.push({\n          col,\n          row: colChanges[randomIndex]\n        });\n      }\n    }\n    setPlayerCues(cues);\n  };\n\n  // Generate empty table\n  const generateEmptyTable = () => {\n    const newTable = playerNames.map(name => Array(columns).fill(''));\n    setGeneratedTable(newTable);\n  };\n\n  // Fill table with on/off states fairly distributed among players\n  const fillTable = () => {\n    const newTable = [...generatedTable];\n\n    // Track how many active cells each player has\n    const playerCellCounts = Array(playerNames.length).fill(0);\n\n    // Start from column 1 (index 1), skipping the first column\n    for (let col = 1; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1));\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length);\n\n      // Sort players by number of active cells (ascending) to prioritize players with fewer active states\n      const playerIndices = Array.from({\n        length: playerNames.length\n      }, (_, i) => i).sort((a, b) => playerCellCounts[a] - playerCellCounts[b]);\n\n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = '';\n      }\n\n      // Assign active states to selected players (prioritizing those with fewer active states)\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i];\n        newTable[playerIdx][col] = 'on';\n        playerCellCounts[playerIdx]++;\n      }\n    }\n    setGeneratedTable(newTable);\n  };\n\n  // Handle player names from file\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const text = e.target.result;\n      const names = text.split(/[\\n,]/) // Split by newline or comma\n      .map(name => name.trim()).filter(name => name.length > 0);\n      if (names.length > 0) {\n        setPlayerNames(names);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Handle manually adding players\n  const handleAddPlayers = () => {\n    if (!newPlayerInput.trim()) return;\n    const newPlayers = newPlayerInput.split(',').map(name => name.trim()).filter(name => name);\n    if (newPlayers.length > 0) {\n      setPlayerNames([...playerNames, ...newPlayers]);\n      setNewPlayerInput('');\n    }\n  };\n\n  // Handle removing a player\n  const removePlayer = index => {\n    const newPlayers = [...playerNames];\n    newPlayers.splice(index, 1);\n    setPlayerNames(newPlayers);\n  };\n\n  // Handle player reordering\n  const movePlayer = (index, direction) => {\n    if (direction === 'up' && index === 0 || direction === 'down' && index === playerNames.length - 1) {\n      return;\n    }\n    const newPlayers = [...playerNames];\n    const targetIndex = direction === 'up' ? index - 1 : index + 1;\n\n    // Swap positions\n    const temp = newPlayers[index];\n    newPlayers[index] = newPlayers[targetIndex];\n    newPlayers[targetIndex] = temp;\n    setPlayerNames(newPlayers);\n  };\n\n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable];\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'on';\n    setGeneratedTable(newTable);\n  };\n\n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable();\n  };\n\n  // Start/reset slider for timed cues\n  const startSlider = () => {\n    // Reset positions\n    setSliderPosition(0);\n    setProgressBarPosition(0);\n    setSliderActive(true);\n    generateColumnDurations(); // Generate new random durations if uneven\n  };\n\n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false);\n  };\n\n  // Reset slider\n  const resetSlider = () => {\n    setSliderPosition(-1);\n    setProgressBarPosition(0);\n    setSliderActive(false);\n  };\n\n  // Check if a cell should display player cue\n  const shouldShowPlayerCue = (rowIdx, colIdx) => {\n    return cueMode === 'player' && playerCues.some(cue => cue.row === rowIdx && cue.col === colIdx);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `settings-panel ${settingsCollapsed ? 'collapsed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSettingsCollapsed(!settingsCollapsed),\n    className: \"collapse-toggle-button\",\n    \"aria-label\": settingsCollapsed ? \"Expand settings\" : \"Collapse settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, settingsCollapsed ? '>' : '<'), !settingsCollapsed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, \"Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, \"Add Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-with-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newPlayerInput,\n    onChange: e => setNewPlayerInput(e.target.value),\n    placeholder: \"Names, separated by commas\",\n    className: \"text-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddPlayers,\n    className: \"add-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  }, \"Player Names File\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".txt,.csv\",\n    onChange: handleFileUpload,\n    ref: fileInputRef,\n    className: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => fileInputRef.current.click(),\n    className: \"file-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, \"Open File\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayerNames([]),\n    className: \"clear-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }, \"Clear All\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 19\n    }\n  }, \"Current Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 19\n    }\n  }, playerNames.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-players\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 23\n    }\n  }, \"No players added\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"player-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 23\n    }\n  }, playerNames.map((name, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"player-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => movePlayer(index, 'up'),\n    disabled: index === 0,\n    className: `move-button ${index === 0 ? 'disabled' : ''}`,\n    \"aria-label\": \"Move player up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 31\n    }\n  }, \"\\u2191\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => movePlayer(index, 'down'),\n    disabled: index === playerNames.length - 1,\n    className: `move-button ${index === playerNames.length - 1 ? 'disabled' : ''}`,\n    \"aria-label\": \"Move player down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 31\n    }\n  }, \"\\u2193\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removePlayer(index),\n    className: \"remove-button\",\n    \"aria-label\": \"Remove player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 31\n    }\n  }, \"\\xD7\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }, \"Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-controls-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 21\n    }\n  }, \"Columns\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    max: \"20\",\n    value: columns,\n    onChange: e => setColumns(parseInt(e.target.value) || 1),\n    className: \"number-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 21\n    }\n  }, \"Min Players\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: minPlayers,\n    onChange: e => setMinPlayers(parseInt(e.target.value) || 0),\n    className: \"number-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 21\n    }\n  }, \"Max Additional\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: maxAdditionalPlayers,\n    onChange: e => setMaxAdditionalPlayers(parseInt(e.target.value) || 0),\n    className: \"number-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-buttons-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fillTable,\n    className: \"fill-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  }, \"Fill Table\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearAllCells,\n    className: \"clear-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 19\n    }\n  }, \"Clear Table\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 17\n    }\n  }, \"Timing\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cue-mode-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCueMode('none'),\n    className: `cue-toggle-button ${cueMode === 'none' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 19\n    }\n  }, \"No cues\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCueMode('player'),\n    className: `cue-toggle-button ${cueMode === 'player' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 19\n    }\n  }, \"Player cues\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCueMode('timed'),\n    className: `cue-toggle-button ${cueMode === 'timed' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 19\n    }\n  }, \"Timed cues\")), cueMode === 'timed' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 27\n    }\n  }, \"Piece duration (seconds)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    value: sliderDuration,\n    onChange: e => setSliderDuration(parseInt(e.target.value) || 30),\n    className: \"number-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pacing-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 27\n    }\n  }, \"Pacing\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPacingMode('even'),\n    className: `pacing-button ${pacingMode === 'even' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 29\n    }\n  }, \"Even\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPacingMode('uneven'),\n    className: `pacing-button ${pacingMode === 'uneven' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 29\n    }\n  }, \"Uneven\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startSlider,\n    className: \"start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 23\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pauseSlider,\n    className: \"pause-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 23\n    }\n  }, \"Pause\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetSlider,\n    className: \"reset-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 23\n    }\n  }, \"Reset\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `table-container ${settingsCollapsed ? 'full-width' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"main-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"player-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 5\n    }\n  }, \"Players\"), Array.from({\n    length: columns - 1\n  }, (_, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    className: \"column-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }\n  }, i + 1)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 1\n    }\n  }, playerNames.map((name, rowIdx) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIdx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"player-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }\n  }, name), Array.from({\n    length: columns - 1\n  }, (_, colIdx) => {\n    var _generatedTable$rowId;\n    const adjustedColIdx = colIdx + 1; // Skip player column in data array\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: colIdx,\n      className: `\n              grid-cell \n              ${adjustedColIdx === sliderPosition && cueMode === 'timed' ? 'active-column' : ''}\n              ${shouldShowPlayerCue(rowIdx, adjustedColIdx) ? 'player-cue' : ''}\n            `,\n      onClick: () => toggleCell(rowIdx, adjustedColIdx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 11\n      }\n    }, ((_generatedTable$rowId = generatedTable[rowIdx]) === null || _generatedTable$rowId === void 0 ? void 0 : _generatedTable$rowId[adjustedColIdx]) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 15\n      }\n    }));\n  }))))), cueMode === 'timed' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    style: {\n      width: `${progressBarPosition}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","OpenGrid","playerNames","setPlayerNames","newPlayerInput","setNewPlayerInput","columns","setColumns","minPlayers","setMinPlayers","maxAdditionalPlayers","setMaxAdditionalPlayers","sliderPosition","setSliderPosition","sliderActive","setSliderActive","sliderDuration","setSliderDuration","generatedTable","setGeneratedTable","selectedCell","setSelectedCell","settingsCollapsed","setSettingsCollapsed","cueMode","setCueMode","playerCues","setPlayerCues","progressBarPosition","setProgressBarPosition","pacingMode","setPacingMode","columnDurations","setColumnDurations","sliderInterval","fileInputRef","generateEmptyTable","generateColumnDurations","totalDuration","columnCount","evenDuration","Array","fill","durations","remainingDuration","i","avgDuration","duration","Math","random","push","getCumulativeDurations","cumulative","sum","length","startTime","Date","now","cumulativeDurations","current","setInterval","elapsedTime","clearInterval","currentColIndex","progress","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","width","calculatePlayerCues","cues","col","colChanges","row","currentState","previousState","randomIndex","floor","newTable","map","name","fillTable","playerCellCounts","additionalPlayers","totalPlayers","min","playerIndices","from","_","sort","a","b","playerIdx","handleFileUpload","e","file","target","files","reader","FileReader","onload","text","result","names","split","trim","filter","readAsText","handleAddPlayers","newPlayers","removePlayer","index","splice","movePlayer","direction","targetIndex","temp","toggleCell","rowIdx","colIdx","clearAllCells","startSlider","pauseSlider","resetSlider","shouldShowPlayerCue","some","cue","onClick","type","value","onChange","placeholder","accept","ref","click","key","disabled","max","parseInt","Fragment","_generatedTable$rowId","adjustedColIdx"],"sources":["/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/src/OpenGrid.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './OpenGrid.css';\n\nexport default function OpenGrid() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh']);\n  const [newPlayerInput, setNewPlayerInput] = useState('');\n  const [columns, setColumns] = useState(8);\n  const [minPlayers, setMinPlayers] = useState(1);\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1);\n  const [sliderPosition, setSliderPosition] = useState(-1);\n  const [sliderActive, setSliderActive] = useState(false);\n  const [sliderDuration, setSliderDuration] = useState(30);\n  const [generatedTable, setGeneratedTable] = useState([]);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [settingsCollapsed, setSettingsCollapsed] = useState(false);\n  const [cueMode, setCueMode] = useState('none'); // 'none', 'player', or 'timed'\n  const [playerCues, setPlayerCues] = useState([]);\n  const [progressBarPosition, setProgressBarPosition] = useState(0);\n  const [pacingMode, setPacingMode] = useState('even'); // 'even' or 'uneven'\n  const [columnDurations, setColumnDurations] = useState([]);\n  \n  const sliderInterval = useRef(null);\n  const fileInputRef = useRef(null);\n  \n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable();\n    generateColumnDurations();\n  }, [playerNames, columns, pacingMode, sliderDuration]);\n  \n  // Generate column durations based on pacing mode\n  const generateColumnDurations = () => {\n  if (columns <= 1) return;\n  \n  const totalDuration = sliderDuration;\n  const columnCount = columns - 1; // Exclude player column\n  \n  if (pacingMode === 'even') {\n    // Even distribution\n    const evenDuration = totalDuration / columnCount;\n    setColumnDurations(Array(columnCount).fill(evenDuration));\n  } else {\n    // Uneven distribution\n    const durations = [];\n    let remainingDuration = totalDuration;\n    \n    for (let i = 0; i < columnCount - 1; i++) {\n      // Random duration between 0.5 and 1.5 times the average duration\n      const avgDuration = remainingDuration / (columnCount - i);\n      const duration = avgDuration * (0.5 + Math.random());\n      durations.push(duration);\n      remainingDuration -= duration;\n    }\n    \n    // Add the remaining duration to the last column\n    durations.push(remainingDuration);\n    \n    setColumnDurations(durations);\n  }\n};\n\n  \n  // Get cumulative duration at each column\n  const getCumulativeDurations = () => {\n    const cumulative = [0]; // Start with 0\n    let sum = 0;\n    for (let i = 0; i < columnDurations.length; i++) {\n      sum += columnDurations[i];\n      cumulative.push(sum);\n    }\n    return cumulative;\n  };\n  \n  // Slider animation for timed cues\n  useEffect(() => {\n  if (sliderActive && cueMode === 'timed') {\n    const startTime = Date.now();\n    const cumulativeDurations = getCumulativeDurations();\n    \n    sliderInterval.current = setInterval(() => {\n      const elapsedTime = (Date.now() - startTime) / 1000;\n      \n      if (elapsedTime >= sliderDuration) {\n        setSliderPosition(-1);\n        setProgressBarPosition(0);\n        setSliderActive(false);\n        clearInterval(sliderInterval.current);\n        return;\n      }\n      \n      // Calculate current column and progress\n      let currentColIndex = 0;\n      for (let i = 1; i < cumulativeDurations.length; i++) {\n        if (elapsedTime >= cumulativeDurations[i - 1] && elapsedTime < cumulativeDurations[i]) {\n          currentColIndex = i;\n          break;\n        }\n      }\n      \n      // Update slider position (adjust by +1 to account for player column)\n      setSliderPosition(currentColIndex);\n      \n      // Calculate progress bar position (0 to 100%)\n      const progress = elapsedTime / sliderDuration;\n      setProgressBarPosition(progress * 100);\n      \n    }, 33); // ~30 fps update\n  } else if (!sliderActive && sliderInterval.current) {\n    clearInterval(sliderInterval.current);\n  }\n  \n  return () => {\n    if (sliderInterval.current) clearInterval(sliderInterval.current);\n  };\n}, [sliderActive, cueMode, sliderDuration, columnDurations]);\n\n  // Add a progress bar component below table\n  {cueMode === 'timed' && (\n  <div className=\"progress-container\">\n    <div \n      className=\"progress-bar\" \n      style={{ width: `${progressBarPosition}%` }}\n    ></div>\n  </div>\n)}\n  \n  // Update player cues when table changes\n  useEffect(() => {\n    if (cueMode === 'player') {\n      calculatePlayerCues();\n    } else {\n      setPlayerCues([]);\n    }\n  }, [generatedTable, cueMode]);\n  \n  // Calculate which cells should have player cues\n  const calculatePlayerCues = () => {\n    const cues = [];\n    \n    // Start from the second column (index 1)\n    for (let col = 1; col < columns; col++) {\n      const colChanges = [];\n      \n      for (let row = 0; row < playerNames.length; row++) {\n        const currentState = generatedTable[row][col] ? true : false;\n        const previousState = generatedTable[row][col-1] ? true : false;\n        \n        // If player state changed (on to off, or off to on)\n        if (currentState !== previousState) {\n          colChanges.push(row);\n        }\n      }\n      \n      // If there are changes, select one player to be the cue\n      if (colChanges.length > 0) {\n        // Randomly select one player who changed state\n        const randomIndex = Math.floor(Math.random() * colChanges.length);\n        cues.push({ col, row: colChanges[randomIndex] });\n      }\n    }\n    \n    setPlayerCues(cues);\n  };\n  \n  // Generate empty table\n  const generateEmptyTable = () => {\n    const newTable = playerNames.map(name => Array(columns).fill(''));\n    setGeneratedTable(newTable);\n  };\n  \n  // Fill table with on/off states fairly distributed among players\n  const fillTable = () => {\n    const newTable = [...generatedTable];\n    \n    // Track how many active cells each player has\n    const playerCellCounts = Array(playerNames.length).fill(0);\n    \n    // Start from column 1 (index 1), skipping the first column\n    for (let col = 1; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1));\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length);\n      \n      // Sort players by number of active cells (ascending) to prioritize players with fewer active states\n      const playerIndices = Array.from({ length: playerNames.length }, (_, i) => i)\n        .sort((a, b) => playerCellCounts[a] - playerCellCounts[b]);\n      \n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = '';\n      }\n      \n      // Assign active states to selected players (prioritizing those with fewer active states)\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i];\n        newTable[playerIdx][col] = 'on';\n        playerCellCounts[playerIdx]++;\n      }\n    }\n    \n    setGeneratedTable(newTable);\n  };\n  \n  // Handle player names from file\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const text = e.target.result;\n      const names = text.split(/[\\n,]/) // Split by newline or comma\n        .map(name => name.trim())\n        .filter(name => name.length > 0);\n      \n      if (names.length > 0) {\n        setPlayerNames(names);\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  // Handle manually adding players\n  const handleAddPlayers = () => {\n    if (!newPlayerInput.trim()) return;\n    \n    const newPlayers = newPlayerInput\n      .split(',')\n      .map(name => name.trim())\n      .filter(name => name);\n    \n    if (newPlayers.length > 0) {\n      setPlayerNames([...playerNames, ...newPlayers]);\n      setNewPlayerInput('');\n    }\n  };\n  \n  // Handle removing a player\n  const removePlayer = (index) => {\n    const newPlayers = [...playerNames];\n    newPlayers.splice(index, 1);\n    setPlayerNames(newPlayers);\n  };\n  \n  // Handle player reordering\n  const movePlayer = (index, direction) => {\n    if ((direction === 'up' && index === 0) || \n        (direction === 'down' && index === playerNames.length - 1)) {\n      return;\n    }\n    \n    const newPlayers = [...playerNames];\n    const targetIndex = direction === 'up' ? index - 1 : index + 1;\n    \n    // Swap positions\n    const temp = newPlayers[index];\n    newPlayers[index] = newPlayers[targetIndex];\n    newPlayers[targetIndex] = temp;\n    setPlayerNames(newPlayers);\n  };\n  \n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable];\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'on';\n    setGeneratedTable(newTable);\n  };\n  \n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable();\n  };\n  \n  // Start/reset slider for timed cues\n  const startSlider = () => {\n    // Reset positions\n    setSliderPosition(0);\n    setProgressBarPosition(0);\n    setSliderActive(true);\n    generateColumnDurations(); // Generate new random durations if uneven\n  };\n  \n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false);\n  };\n  \n  // Reset slider\n  const resetSlider = () => {\n    setSliderPosition(-1);\n    setProgressBarPosition(0);\n    setSliderActive(false);\n  };\n  \n  // Check if a cell should display player cue\n  const shouldShowPlayerCue = (rowIdx, colIdx) => {\n    return cueMode === 'player' && playerCues.some(cue => cue.row === rowIdx && cue.col === colIdx);\n  };\n  \n  return (\n    <div className=\"app-container\">\n      {/* Main Container */}\n      <div className=\"main-layout\">\n        {/* Settings Panel (Left Side) */}\n        <div className={`settings-panel ${settingsCollapsed ? 'collapsed' : ''}`}>\n          {/* Collapse/Expand Toggle */}\n          <button \n            onClick={() => setSettingsCollapsed(!settingsCollapsed)}\n            className=\"collapse-toggle-button\"\n            aria-label={settingsCollapsed ? \"Expand settings\" : \"Collapse settings\"}\n          >\n            {settingsCollapsed ? '>' : '<'}\n          </button>\n          \n          {!settingsCollapsed && (\n            <div className=\"settings-content\">\n              {/* Players Management */}\n              <div className=\"settings-section\">\n                <h2 className=\"section-title\">Players</h2>\n                \n                {/* Add Players */}\n                <div className=\"control-group\">\n                  <label>Add Players</label>\n                  <div className=\"input-with-button\">\n                    <input \n                      type=\"text\" \n                      value={newPlayerInput} \n                      onChange={(e) => setNewPlayerInput(e.target.value)}\n                      placeholder=\"Names, separated by commas\"\n                      className=\"text-input\"\n                    />\n                    <button \n                      onClick={handleAddPlayers}\n                      className=\"add-button\"\n                    >\n                      Add\n                    </button>\n                  </div>\n                </div>\n                \n                {/* File Upload */}\n                <div className=\"control-group\">\n                  <label>Player Names File</label>\n                  <div className=\"button-group\">\n                    <input \n                      type=\"file\" \n                      accept=\".txt,.csv\" \n                      onChange={handleFileUpload} \n                      ref={fileInputRef}\n                      className=\"hidden\"\n                    />\n                    <button \n                      onClick={() => fileInputRef.current.click()}\n                      className=\"file-button\"\n                    >\n                      Open File\n                    </button>\n                    <button \n                      onClick={() => setPlayerNames([])}\n                      className=\"clear-button\"\n                    >\n                      Clear All\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Player List */}\n                <div className=\"control-group\">\n                  <label>Current Players</label>\n                  <div className=\"player-list-container\">\n                    {playerNames.length === 0 ? (\n                      <div className=\"no-players\">No players added</div>\n                    ) : (\n                      <ul className=\"player-list\">\n                        {playerNames.map((name, index) => (\n                          <li key={index} className=\"player-item\">\n                            <span className=\"player-name\">{name}</span>\n                            <div className=\"player-controls\">\n                              <button \n                                onClick={() => movePlayer(index, 'up')}\n                                disabled={index === 0}\n                                className={`move-button ${index === 0 ? 'disabled' : ''}`}\n                                aria-label=\"Move player up\"\n                              >\n                                ↑\n                              </button>\n                              <button \n                                onClick={() => movePlayer(index, 'down')}\n                                disabled={index === playerNames.length - 1}\n                                className={`move-button ${index === playerNames.length - 1 ? 'disabled' : ''}`}\n                                aria-label=\"Move player down\"\n                              >\n                                ↓\n                              </button>\n                              <button \n                                onClick={() => removePlayer(index)}\n                                className=\"remove-button\"\n                                aria-label=\"Remove player\"\n                              >\n                                ×\n                              </button>\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Table Configuration */}\n              <div className=\"settings-section\">\n                <h2 className=\"section-title\">Table</h2>\n                \n                <div className=\"table-controls-row\">\n                  <div className=\"control-group\">\n                    <label>Columns</label>\n                    <input \n                      type=\"number\" \n                      min=\"1\" \n                      max=\"20\" \n                      value={columns} \n                      onChange={(e) => setColumns(parseInt(e.target.value) || 1)}\n                      className=\"number-input\"\n                    />\n                  </div>\n                  \n                  <div className=\"control-group\">\n                    <label>Min Players</label>\n                    <input \n                      type=\"number\" \n                      min=\"0\" \n                      max={playerNames.length} \n                      value={minPlayers} \n                      onChange={(e) => setMinPlayers(parseInt(e.target.value) || 0)}\n                      className=\"number-input\"\n                    />\n                  </div>\n                  \n                  <div className=\"control-group\">\n                    <label>Max Additional</label>\n                    <input \n                      type=\"number\" \n                      min=\"0\" \n                      max={playerNames.length} \n                      value={maxAdditionalPlayers} \n                      onChange={(e) => setMaxAdditionalPlayers(parseInt(e.target.value) || 0)}\n                      className=\"number-input\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"table-buttons-row\">\n                  <button \n                    onClick={fillTable}\n                    className=\"fill-button\"\n                  >\n                    Fill Table\n                  </button>\n                  <button \n                    onClick={clearAllCells}\n                    className=\"clear-button\"\n                  >\n                    Clear Table\n                  </button>\n                </div>\n              </div>\n              \n              {/* Timing Cues Controls */}\n              <div className=\"settings-section\">\n                <h2 className=\"section-title\">Timing</h2>\n                \n                <div className=\"cue-mode-selector\">\n                  <button \n                    onClick={() => setCueMode('none')}\n                    className={`cue-toggle-button ${cueMode === 'none' ? 'active' : ''}`}\n                  >\n                    No cues\n                  </button>\n                  <button \n                    onClick={() => setCueMode('player')}\n                    className={`cue-toggle-button ${cueMode === 'player' ? 'active' : ''}`}\n                  >\n                    Player cues\n                  </button>\n                  <button \n                    onClick={() => setCueMode('timed')}\n                    className={`cue-toggle-button ${cueMode === 'timed' ? 'active' : ''}`}\n                  >\n                    Timed cues\n                  </button>\n                </div>\n                \n                {cueMode === 'timed' && (\n                  <>\n                    <div className=\"control-group mt-10\">\n                      <div className=\"settings-row\">\n                        <div>\n                          <label>Piece duration (seconds)</label>\n                          <input \n                            type=\"number\" \n                            min=\"1\" \n                            value={sliderDuration} \n                            onChange={(e) => setSliderDuration(parseInt(e.target.value) || 30)}\n                            className=\"number-input\"\n                          />\n                        </div>\n                        \n                        <div className=\"pacing-controls\">\n                          <label>Pacing</label>\n                          <div className=\"button-group\">\n                            <button \n                              onClick={() => setPacingMode('even')}\n                              className={`pacing-button ${pacingMode === 'even' ? 'active' : ''}`}\n                            >\n                              Even\n                            </button>\n                            <button \n                              onClick={() => setPacingMode('uneven')}\n                              className={`pacing-button ${pacingMode === 'uneven' ? 'active' : ''}`}\n                            >\n                              Uneven\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"button-group mt-10\">\n                      <button \n                        onClick={startSlider} \n                        className=\"start-button\"\n                      >\n                        Start\n                      </button>\n                      <button \n                        onClick={pauseSlider}\n                        className=\"pause-button\"\n                      >\n                        Pause\n                      </button>\n                      <button \n                        onClick={resetSlider}\n                        className=\"reset-button\"\n                      >\n                        Reset\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Main Table Display (Right Side) */}\n        <div className={`table-container ${settingsCollapsed ? 'full-width' : ''}`}>\n          <div className=\"table-wrapper\">\n            <table className=\"main-table\">\n              <thead>\n  <tr>\n    <th className=\"player-header\">Players</th>\n    {Array.from({ length: columns - 1 }, (_, i) => (\n      <th key={i} className=\"column-header\">\n        {i + 1}\n      </th>\n    ))}\n  </tr>\n</thead>\n<tbody>\n  {playerNames.map((name, rowIdx) => (\n    <tr key={rowIdx}>\n      <td className=\"player-cell\">\n        {name}\n      </td>\n      {Array.from({ length: columns - 1 }, (_, colIdx) => {\n        const adjustedColIdx = colIdx + 1; // Skip player column in data array\n        return (\n          <td \n            key={colIdx} \n            className={`\n              grid-cell \n              ${adjustedColIdx === sliderPosition && cueMode === 'timed' ? 'active-column' : ''}\n              ${shouldShowPlayerCue(rowIdx, adjustedColIdx) ? 'player-cue' : ''}\n            `}\n            onClick={() => toggleCell(rowIdx, adjustedColIdx)}\n          >\n            {generatedTable[rowIdx]?.[adjustedColIdx] && (\n              <div className=\"player-on\"></div>\n            )}\n          </td>\n        );\n      })}\n    </tr>\n  ))}\n</tbody>\n            </table>\n            \n            {/* Progress bar */}\n            {cueMode === 'timed' && (\n              <div className=\"progress-container\">\n                <div \n                  className=\"progress-bar\" \n                  style={{ width: `${progressBarPosition}%` }}\n                ></div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}