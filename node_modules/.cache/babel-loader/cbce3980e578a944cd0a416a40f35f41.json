{"ast":null,"code":"var _jsxFileName = \"/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/OpenGrid/src/App.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nexport default function ImprovisationalStructureGenerator() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh']);\n  const [newPlayerInput, setNewPlayerInput] = useState('');\n  const [columns, setColumns] = useState(8);\n  const [minPlayers, setMinPlayers] = useState(1);\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1);\n  const [sliderPosition, setSliderPosition] = useState(-1);\n  const [sliderActive, setSliderActive] = useState(false);\n  const [sliderVisible, setSliderVisible] = useState(true);\n  const [sliderDuration, setSliderDuration] = useState(30);\n  const [generatedTable, setGeneratedTable] = useState([]);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [cellMode, setCellMode] = useState('cell'); // 'none' or 'cell'\n  const [settingsCollapsed, setSettingsCollapsed] = useState(false);\n  const sliderInterval = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable();\n  }, [playerNames, columns]);\n\n  // Slider animation\n  useEffect(() => {\n    if (sliderActive && sliderVisible) {\n      sliderInterval.current = setInterval(() => {\n        setSliderPosition(prev => {\n          const newPos = prev + 1;\n          if (newPos >= columns) {\n            setSliderActive(false);\n            return -1;\n          }\n          return newPos;\n        });\n      }, sliderDuration * 1000 / columns);\n    } else if (!sliderActive && sliderInterval.current) {\n      clearInterval(sliderInterval.current);\n    }\n    return () => {\n      if (sliderInterval.current) clearInterval(sliderInterval.current);\n    };\n  }, [sliderActive, sliderVisible, columns, sliderDuration]);\n\n  // Generate empty table\n  const generateEmptyTable = () => {\n    const newTable = playerNames.map(name => Array(columns).fill(''));\n    setGeneratedTable(newTable);\n  };\n\n  // Fill table with cues fairly distributed among players\n  const fillTable = () => {\n    const newTable = [...generatedTable];\n\n    // Track how many cues each player has\n    const playerCueCounts = Array(playerNames.length).fill(0);\n    for (let col = 0; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1));\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length);\n\n      // Sort players by number of cues (ascending) to prioritize players with fewer cues\n      const playerIndices = Array.from({\n        length: playerNames.length\n      }, (_, i) => i).sort((a, b) => playerCueCounts[a] - playerCueCounts[b]);\n\n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = '';\n      }\n\n      // Assign cues to selected players (prioritizing those with fewer cues)\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i];\n        newTable[playerIdx][col] = 'X';\n        playerCueCounts[playerIdx]++;\n      }\n    }\n    setGeneratedTable(newTable);\n  };\n\n  // Handle player names from file\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const text = e.target.result;\n      const lines = text.split('\\n');\n      const names = lines.filter(line => line.trim()).map(line => {\n        const match = line.match(/\\d+,\\s*\\d+\\s+([^;]+);/);\n        return match ? match[1].trim() : null;\n      }).filter(Boolean);\n      if (names.length > 0) {\n        setPlayerNames(names);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Handle manually adding players\n  const handleAddPlayers = () => {\n    if (!newPlayerInput.trim()) return;\n    const newPlayers = newPlayerInput.split(',').map(name => name.trim()).filter(name => name);\n    if (newPlayers.length > 0) {\n      setPlayerNames([...playerNames, ...newPlayers]);\n      setNewPlayerInput('');\n    }\n  };\n\n  // Handle removing a player\n  const removePlayer = index => {\n    const newPlayers = [...playerNames];\n    newPlayers.splice(index, 1);\n    setPlayerNames(newPlayers);\n  };\n\n  // Handle player reordering\n  const movePlayer = (index, direction) => {\n    if (direction === 'up' && index === 0 || direction === 'down' && index === playerNames.length - 1) {\n      return;\n    }\n    const newPlayers = [...playerNames];\n    const targetIndex = direction === 'up' ? index - 1 : index + 1;\n\n    // Swap positions\n    const temp = newPlayers[index];\n    newPlayers[index] = newPlayers[targetIndex];\n    newPlayers[targetIndex] = temp;\n    setPlayerNames(newPlayers);\n  };\n\n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable];\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'X';\n    setGeneratedTable(newTable);\n  };\n\n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable();\n  };\n\n  // Start/reset slider\n  const startSlider = () => {\n    setSliderPosition(0);\n    setSliderActive(true);\n  };\n\n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false);\n  };\n\n  // Reset slider\n  const resetSlider = () => {\n    setSliderPosition(-1);\n    setSliderActive(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-grow overflow-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `bg-gray-200 transition-all duration-300 ${settingsCollapsed ? 'w-8' : 'w-1/4'} flex flex-col relative`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSettingsCollapsed(!settingsCollapsed),\n    className: \"absolute top-3 right-2 bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, settingsCollapsed ? '>' : '<'), !settingsCollapsed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 overflow-y-auto flex-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-xl font-bold text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Settings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-3 rounded-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, \"Add Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newPlayerInput,\n    onChange: e => setNewPlayerInput(e.target.value),\n    placeholder: \"Names, separated by commas\",\n    className: \"border border-gray-400 px-2 py-1 rounded text-sm flex-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddPlayers,\n    className: \"bg-green-500 text-white px-2 py-1 rounded text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, \"Player Names File\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".txt\",\n    onChange: handleFileUpload,\n    ref: fileInputRef,\n    className: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => fileInputRef.current.click(),\n    className: \"bg-blue-100 border border-gray-400 px-2 py-1 rounded text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, \"Open File\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayerNames([]),\n    className: \"bg-gray-200 border border-gray-400 px-2 py-1 rounded text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, \"Clear All\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }, \"Current Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-h-40 overflow-y-auto bg-white rounded border border-gray-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, playerNames.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 text-gray-500 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }, \"No players added\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"divide-y divide-gray-200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 23\n    }\n  }, playerNames.map((name, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"flex items-center justify-between p-2 hover:bg-gray-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => movePlayer(index, 'up'),\n    disabled: index === 0,\n    className: `px-1 text-xs rounded ${index === 0 ? 'bg-gray-100 text-gray-400' : 'bg-blue-100'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 31\n    }\n  }, \"\\u2191\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => movePlayer(index, 'down'),\n    disabled: index === playerNames.length - 1,\n    className: `px-1 text-xs rounded ${index === playerNames.length - 1 ? 'bg-gray-100 text-gray-400' : 'bg-blue-100'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 31\n    }\n  }, \"\\u2193\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removePlayer(index),\n    className: \"bg-red-100 px-1 text-xs rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 31\n    }\n  }, \"\\xD7\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-3 rounded-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, \"Table Settings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-2 gap-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, \"Number of Columns\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    max: \"20\",\n    value: columns,\n    onChange: e => setColumns(parseInt(e.target.value) || 1),\n    className: \"border border-gray-400 px-2 py-1 rounded w-full text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, \"Min Players per Column\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: minPlayers,\n    onChange: e => setMinPlayers(parseInt(e.target.value) || 0),\n    className: \"border border-gray-400 px-2 py-1 rounded w-full text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, \"Max Additional Players\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: maxAdditionalPlayers,\n    onChange: e => setMaxAdditionalPlayers(parseInt(e.target.value) || 0),\n    className: \"border border-gray-400 px-2 py-1 rounded w-full text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fillTable,\n    className: \"bg-red-400 text-white border border-gray-400 px-3 py-1 rounded text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, \"Fill Table\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-3 rounded-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, \"Slider Settings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-2 gap-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, \"Duration (seconds)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    value: sliderDuration,\n    onChange: e => setSliderDuration(parseInt(e.target.value) || 30),\n    className: \"border border-gray-400 px-2 py-1 rounded w-full text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }, \"Visibility\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSliderVisible(true),\n    className: `border px-2 py-1 rounded text-sm ${sliderVisible ? 'bg-orange-400 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 23\n    }\n  }, \"Show\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSliderVisible(false),\n    className: `border px-2 py-1 rounded text-sm ${!sliderVisible ? 'bg-gray-500 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 23\n    }\n  }, \"Hide\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startSlider,\n    className: \"bg-green-200 border border-gray-400 px-3 py-1 rounded text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 19\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pauseSlider,\n    className: \"bg-blue-200 border border-gray-400 px-3 py-1 rounded text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 19\n    }\n  }, \"Pause\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetSlider,\n    className: \"bg-red-100 border border-gray-400 px-3 py-1 rounded text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }, \"Reset\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-3 rounded-lg mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, \"Cell Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCellMode('none'),\n    className: `border px-3 py-1 rounded text-sm ${cellMode === 'none' ? 'bg-orange-400 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 19\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCellMode('cell'),\n    className: `border px-3 py-1 rounded text-sm ${cellMode === 'cell' ? 'bg-gray-500 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, \"Cell\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearAllCells,\n    className: \"bg-gray-200 border border-gray-400 px-3 py-1 rounded text-sm ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 19\n    }\n  }, \"Clear All\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `flex-grow ${settingsCollapsed ? 'w-full' : 'w-3/4'} p-4 overflow-auto flex flex-col`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold mb-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  }, \"Improvisational Structure Generator\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overflow-auto flex-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"border-collapse border w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border border-gray-400 p-2 bg-gray-100 sticky left-0 z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }\n  }, \"Players\"), Array.from({\n    length: columns\n  }, (_, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    className: \"border border-gray-400 p-2 bg-gray-100 w-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  }, i + 1)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, playerNames.map((name, rowIdx) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIdx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"border border-gray-400 p-2 bg-gray-100 font-medium sticky left-0 z-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 21\n    }\n  }, name), Array.from({\n    length: columns\n  }, (_, colIdx) => {\n    var _generatedTable$rowId;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: colIdx,\n      className: `border border-gray-400 p-0 text-center relative h-12 w-12\n                          ${colIdx === sliderPosition && sliderVisible ? 'bg-yellow-200' : 'bg-white'}\n                        `,\n      onClick: () => cellMode === 'cell' ? toggleCell(rowIdx, colIdx) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 23\n      }\n    }, ((_generatedTable$rowId = generatedTable[rowIdx]) === null || _generatedTable$rowId === void 0 ? void 0 : _generatedTable$rowId[colIdx]) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center font-bold text-xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 27\n      }\n    }, \"X\"));\n  })))))))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","ImprovisationalStructureGenerator","playerNames","setPlayerNames","newPlayerInput","setNewPlayerInput","columns","setColumns","minPlayers","setMinPlayers","maxAdditionalPlayers","setMaxAdditionalPlayers","sliderPosition","setSliderPosition","sliderActive","setSliderActive","sliderVisible","setSliderVisible","sliderDuration","setSliderDuration","generatedTable","setGeneratedTable","selectedCell","setSelectedCell","cellMode","setCellMode","settingsCollapsed","setSettingsCollapsed","sliderInterval","fileInputRef","generateEmptyTable","current","setInterval","prev","newPos","clearInterval","newTable","map","name","Array","fill","fillTable","playerCueCounts","length","col","additionalPlayers","Math","floor","random","totalPlayers","min","playerIndices","from","_","i","sort","a","b","row","playerIdx","handleFileUpload","e","file","target","files","reader","FileReader","onload","text","result","lines","split","names","filter","line","trim","match","Boolean","readAsText","handleAddPlayers","newPlayers","removePlayer","index","splice","movePlayer","direction","targetIndex","temp","toggleCell","rowIdx","colIdx","clearAllCells","startSlider","pauseSlider","resetSlider","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","placeholder","accept","ref","click","key","disabled","max","parseInt","_generatedTable$rowId"],"sources":["/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/OpenGrid/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nexport default function ImprovisationalStructureGenerator() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh'])\n  const [newPlayerInput, setNewPlayerInput] = useState('')\n  const [columns, setColumns] = useState(8)\n  const [minPlayers, setMinPlayers] = useState(1)\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1)\n  const [sliderPosition, setSliderPosition] = useState(-1)\n  const [sliderActive, setSliderActive] = useState(false)\n  const [sliderVisible, setSliderVisible] = useState(true)\n  const [sliderDuration, setSliderDuration] = useState(30)\n  const [generatedTable, setGeneratedTable] = useState([])\n  const [selectedCell, setSelectedCell] = useState(null)\n  const [cellMode, setCellMode] = useState('cell') // 'none' or 'cell'\n  const [settingsCollapsed, setSettingsCollapsed] = useState(false)\n  \n  const sliderInterval = useRef(null)\n  const fileInputRef = useRef(null)\n  \n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable()\n  }, [playerNames, columns])\n  \n  // Slider animation\n  useEffect(() => {\n    if (sliderActive && sliderVisible) {\n      sliderInterval.current = setInterval(() => {\n        setSliderPosition(prev => {\n          const newPos = prev + 1\n          if (newPos >= columns) {\n            setSliderActive(false)\n            return -1\n          }\n          return newPos\n        })\n      }, (sliderDuration * 1000) / columns)\n    } else if (!sliderActive && sliderInterval.current) {\n      clearInterval(sliderInterval.current)\n    }\n    \n    return () => {\n      if (sliderInterval.current) clearInterval(sliderInterval.current)\n    }\n  }, [sliderActive, sliderVisible, columns, sliderDuration])\n  \n  // Generate empty table\n  const generateEmptyTable = () => {\n    const newTable = playerNames.map(name => Array(columns).fill(''))\n    setGeneratedTable(newTable)\n  }\n  \n  // Fill table with cues fairly distributed among players\n  const fillTable = () => {\n    const newTable = [...generatedTable]\n    \n    // Track how many cues each player has\n    const playerCueCounts = Array(playerNames.length).fill(0)\n    \n    for (let col = 0; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1))\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length)\n      \n      // Sort players by number of cues (ascending) to prioritize players with fewer cues\n      const playerIndices = Array.from({ length: playerNames.length }, (_, i) => i)\n        .sort((a, b) => playerCueCounts[a] - playerCueCounts[b])\n      \n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = ''\n      }\n      \n      // Assign cues to selected players (prioritizing those with fewer cues)\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i]\n        newTable[playerIdx][col] = 'X'\n        playerCueCounts[playerIdx]++\n      }\n    }\n    \n    setGeneratedTable(newTable)\n  }\n  \n  // Handle player names from file\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0]\n    if (!file) return\n    \n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const text = e.target.result\n      const lines = text.split('\\n')\n      const names = lines\n        .filter(line => line.trim())\n        .map(line => {\n          const match = line.match(/\\d+,\\s*\\d+\\s+([^;]+);/)\n          return match ? match[1].trim() : null\n        })\n        .filter(Boolean)\n      \n      if (names.length > 0) {\n        setPlayerNames(names)\n      }\n    }\n    reader.readAsText(file)\n  }\n  \n  // Handle manually adding players\n  const handleAddPlayers = () => {\n    if (!newPlayerInput.trim()) return\n    \n    const newPlayers = newPlayerInput\n      .split(',')\n      .map(name => name.trim())\n      .filter(name => name)\n    \n    if (newPlayers.length > 0) {\n      setPlayerNames([...playerNames, ...newPlayers])\n      setNewPlayerInput('')\n    }\n  }\n  \n  // Handle removing a player\n  const removePlayer = (index) => {\n    const newPlayers = [...playerNames]\n    newPlayers.splice(index, 1)\n    setPlayerNames(newPlayers)\n  }\n  \n  // Handle player reordering\n  const movePlayer = (index, direction) => {\n    if ((direction === 'up' && index === 0) || \n        (direction === 'down' && index === playerNames.length - 1)) {\n      return\n    }\n    \n    const newPlayers = [...playerNames]\n    const targetIndex = direction === 'up' ? index - 1 : index + 1\n    \n    // Swap positions\n    const temp = newPlayers[index]\n    newPlayers[index] = newPlayers[targetIndex]\n    newPlayers[targetIndex] = temp\n    setPlayerNames(newPlayers)\n  }\n  \n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable]\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'X'\n    setGeneratedTable(newTable)\n  }\n  \n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable()\n  }\n  \n  // Start/reset slider\n  const startSlider = () => {\n    setSliderPosition(0)\n    setSliderActive(true)\n  }\n  \n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false)\n  }\n  \n  // Reset slider\n  const resetSlider = () => {\n    setSliderPosition(-1)\n    setSliderActive(false)\n  }\n  \n  return (\n    <div className=\"flex flex-col h-screen bg-gray-100\">\n      {/* Main Container */}\n      <div className=\"flex flex-grow overflow-hidden\">\n        {/* Settings Panel (Left Side) */}\n        <div className={`bg-gray-200 transition-all duration-300 ${settingsCollapsed ? 'w-8' : 'w-1/4'} flex flex-col relative`}>\n          {/* Collapse/Expand Toggle */}\n          <button \n            onClick={() => setSettingsCollapsed(!settingsCollapsed)}\n            className=\"absolute top-3 right-2 bg-blue-500 text-white rounded-full w-6 h-6 flex items-center justify-center z-10\"\n          >\n            {settingsCollapsed ? '>' : '<'}\n          </button>\n          \n          {!settingsCollapsed && (\n            <div className=\"p-4 overflow-y-auto flex-grow\">\n              <h1 className=\"text-xl font-bold text-center mb-4\">Settings</h1>\n              \n              {/* Players Management */}\n              <div className=\"bg-yellow-100 p-3 rounded-lg mb-4\">\n                <h2 className=\"font-bold mb-2\">Players</h2>\n                \n                {/* Add Players */}\n                <div className=\"mb-3\">\n                  <label className=\"block mb-1 text-sm\">Add Players</label>\n                  <div className=\"flex gap-2\">\n                    <input \n                      type=\"text\" \n                      value={newPlayerInput} \n                      onChange={(e) => setNewPlayerInput(e.target.value)}\n                      placeholder=\"Names, separated by commas\"\n                      className=\"border border-gray-400 px-2 py-1 rounded text-sm flex-grow\"\n                    />\n                    <button \n                      onClick={handleAddPlayers}\n                      className=\"bg-green-500 text-white px-2 py-1 rounded text-sm\"\n                    >\n                      Add\n                    </button>\n                  </div>\n                </div>\n                \n                {/* File Upload */}\n                <div className=\"mb-3\">\n                  <label className=\"block mb-1 text-sm\">Player Names File</label>\n                  <div className=\"flex gap-2\">\n                    <input \n                      type=\"file\" \n                      accept=\".txt\" \n                      onChange={handleFileUpload} \n                      ref={fileInputRef}\n                      className=\"hidden\"\n                    />\n                    <button \n                      onClick={() => fileInputRef.current.click()}\n                      className=\"bg-blue-100 border border-gray-400 px-2 py-1 rounded text-sm\"\n                    >\n                      Open File\n                    </button>\n                    <button \n                      onClick={() => setPlayerNames([])}\n                      className=\"bg-gray-200 border border-gray-400 px-2 py-1 rounded text-sm\"\n                    >\n                      Clear All\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Player List */}\n                <div className=\"mb-3\">\n                  <label className=\"block mb-1 text-sm\">Current Players</label>\n                  <div className=\"max-h-40 overflow-y-auto bg-white rounded border border-gray-300\">\n                    {playerNames.length === 0 ? (\n                      <div className=\"p-2 text-gray-500 text-sm\">No players added</div>\n                    ) : (\n                      <ul className=\"divide-y divide-gray-200\">\n                        {playerNames.map((name, index) => (\n                          <li key={index} className=\"flex items-center justify-between p-2 hover:bg-gray-50\">\n                            <span className=\"text-sm\">{name}</span>\n                            <div className=\"flex gap-1\">\n                              <button \n                                onClick={() => movePlayer(index, 'up')}\n                                disabled={index === 0}\n                                className={`px-1 text-xs rounded ${index === 0 ? 'bg-gray-100 text-gray-400' : 'bg-blue-100'}`}\n                              >\n                                ↑\n                              </button>\n                              <button \n                                onClick={() => movePlayer(index, 'down')}\n                                disabled={index === playerNames.length - 1}\n                                className={`px-1 text-xs rounded ${index === playerNames.length - 1 ? 'bg-gray-100 text-gray-400' : 'bg-blue-100'}`}\n                              >\n                                ↓\n                              </button>\n                              <button \n                                onClick={() => removePlayer(index)}\n                                className=\"bg-red-100 px-1 text-xs rounded\"\n                              >\n                                ×\n                              </button>\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Table Configuration */}\n              <div className=\"bg-yellow-100 p-3 rounded-lg mb-4\">\n                <h2 className=\"font-bold mb-2\">Table Settings</h2>\n                \n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"block mb-1 text-sm\">Number of Columns</label>\n                    <input \n                      type=\"number\" \n                      min=\"1\" \n                      max=\"20\" \n                      value={columns} \n                      onChange={(e) => setColumns(parseInt(e.target.value) || 1)}\n                      className=\"border border-gray-400 px-2 py-1 rounded w-full text-sm\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block mb-1 text-sm\">Min Players per Column</label>\n                    <input \n                      type=\"number\" \n                      min=\"0\" \n                      max={playerNames.length} \n                      value={minPlayers} \n                      onChange={(e) => setMinPlayers(parseInt(e.target.value) || 0)}\n                      className=\"border border-gray-400 px-2 py-1 rounded w-full text-sm\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block mb-1 text-sm\">Max Additional Players</label>\n                    <input \n                      type=\"number\" \n                      min=\"0\" \n                      max={playerNames.length} \n                      value={maxAdditionalPlayers} \n                      onChange={(e) => setMaxAdditionalPlayers(parseInt(e.target.value) || 0)}\n                      className=\"border border-gray-400 px-2 py-1 rounded w-full text-sm\"\n                    />\n                  </div>\n                  \n                  <div className=\"flex items-end\">\n                    <button \n                      onClick={fillTable}\n                      className=\"bg-red-400 text-white border border-gray-400 px-3 py-1 rounded text-sm\"\n                    >\n                      Fill Table\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Slider Controls */}\n              <div className=\"bg-yellow-100 p-3 rounded-lg mb-4\">\n                <h2 className=\"font-bold mb-2\">Slider Settings</h2>\n                \n                <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                  <div>\n                    <label className=\"block mb-1 text-sm\">Duration (seconds)</label>\n                    <input \n                      type=\"number\" \n                      min=\"1\" \n                      value={sliderDuration} \n                      onChange={(e) => setSliderDuration(parseInt(e.target.value) || 30)}\n                      className=\"border border-gray-400 px-2 py-1 rounded w-full text-sm\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block mb-1 text-sm\">Visibility</label>\n                    <div className=\"flex gap-2\">\n                      <button \n                        onClick={() => setSliderVisible(true)}\n                        className={`border px-2 py-1 rounded text-sm ${sliderVisible ? 'bg-orange-400 text-white' : 'bg-gray-200'}`}\n                      >\n                        Show\n                      </button>\n                      <button \n                        onClick={() => setSliderVisible(false)}\n                        className={`border px-2 py-1 rounded text-sm ${!sliderVisible ? 'bg-gray-500 text-white' : 'bg-gray-200'}`}\n                      >\n                        Hide\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex gap-2\">\n                  <button \n                    onClick={startSlider} \n                    className=\"bg-green-200 border border-gray-400 px-3 py-1 rounded text-sm\"\n                  >\n                    Start\n                  </button>\n                  <button \n                    onClick={pauseSlider}\n                    className=\"bg-blue-200 border border-gray-400 px-3 py-1 rounded text-sm\"\n                  >\n                    Pause\n                  </button>\n                  <button \n                    onClick={resetSlider}\n                    className=\"bg-red-100 border border-gray-400 px-3 py-1 rounded text-sm\"\n                  >\n                    Reset\n                  </button>\n                </div>\n              </div>\n              \n              {/* Cell Options */}\n              <div className=\"bg-yellow-100 p-3 rounded-lg mb-4\">\n                <h2 className=\"font-bold mb-2\">Cell Mode</h2>\n                <div className=\"flex gap-2\">\n                  <button \n                    onClick={() => setCellMode('none')}\n                    className={`border px-3 py-1 rounded text-sm ${cellMode === 'none' ? 'bg-orange-400 text-white' : 'bg-gray-200'}`}\n                  >\n                    None\n                  </button>\n                  <button \n                    onClick={() => setCellMode('cell')}\n                    className={`border px-3 py-1 rounded text-sm ${cellMode === 'cell' ? 'bg-gray-500 text-white' : 'bg-gray-200'}`}\n                  >\n                    Cell\n                  </button>\n                  <button \n                    onClick={clearAllCells}\n                    className=\"bg-gray-200 border border-gray-400 px-3 py-1 rounded text-sm ml-auto\"\n                  >\n                    Clear All\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Main Table Display (Right Side) */}\n        <div className={`flex-grow ${settingsCollapsed ? 'w-full' : 'w-3/4'} p-4 overflow-auto flex flex-col`}>\n          <h1 className=\"text-2xl font-bold mb-4 text-center\">Improvisational Structure Generator</h1>\n          \n          <div className=\"overflow-auto flex-grow\">\n            <table className=\"border-collapse border w-full\">\n              <thead>\n                <tr>\n                  <th className=\"border border-gray-400 p-2 bg-gray-100 sticky left-0 z-10\">Players</th>\n                  {Array.from({ length: columns }, (_, i) => (\n                    <th key={i} className=\"border border-gray-400 p-2 bg-gray-100 w-12 text-center\">\n                      {i + 1}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {playerNames.map((name, rowIdx) => (\n                  <tr key={rowIdx}>\n                    <td className=\"border border-gray-400 p-2 bg-gray-100 font-medium sticky left-0 z-10\">\n                      {name}\n                    </td>\n                    {Array.from({ length: columns }, (_, colIdx) => (\n                      <td \n                        key={colIdx} \n                        className={`border border-gray-400 p-0 text-center relative h-12 w-12\n                          ${colIdx === sliderPosition && sliderVisible ? 'bg-yellow-200' : 'bg-white'}\n                        `}\n                        onClick={() => cellMode === 'cell' ? toggleCell(rowIdx, colIdx) : null}\n                      >\n                        {generatedTable[rowIdx]?.[colIdx] && (\n                          <div className=\"absolute inset-0 flex items-center justify-center font-bold text-xl\">\n                            X\n                          </div>\n                        )}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}