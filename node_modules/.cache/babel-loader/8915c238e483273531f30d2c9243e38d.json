{"ast":null,"code":"var _jsxFileName = \"/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/src/OpenGrid.jsx\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './OpenGrid.css';\nexport default function OpenGrid() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh']);\n  const [newPlayerInput, setNewPlayerInput] = useState('');\n  const [columns, setColumns] = useState(8);\n  const [minPlayers, setMinPlayers] = useState(1);\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1);\n  const [sliderActive, setSliderActive] = useState(false);\n  const [durationMinutes, setDurationMinutes] = useState(0);\n  const [durationSeconds, setDurationSeconds] = useState(30);\n  const [totalDurationSeconds, setTotalDurationSeconds] = useState(30);\n  const [generatedTable, setGeneratedTable] = useState([]);\n  const [settingsCollapsed, setSettingsCollapsed] = useState(false);\n  const [cueMode, setCueMode] = useState('none'); // 'none', 'player', or 'timed'\n  const [playerCues, setPlayerCues] = useState([]);\n  const [progressBarPosition, setProgressBarPosition] = useState(0);\n  const [pacingMode, setPacingMode] = useState('even'); // 'even' or 'uneven'\n  const [columnDurations, setColumnDurations] = useState([]);\n  const [sliderCompleted, setSliderCompleted] = useState(false);\n  const sliderInterval = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Generate empty table\n  const generateEmptyTable = useCallback(() => {\n    const newTable = playerNames.map(name => Array(columns).fill(''));\n    setGeneratedTable(newTable);\n  }, [playerNames, columns]);\n\n  // Generate column durations based on pacing mode\n  const generateColumnDurations = useCallback(() => {\n    if (columns <= 1) return;\n    const totalDuration = totalDurationSeconds;\n    const columnCount = columns - 1; // Exclude player column\n\n    if (pacingMode === 'even') {\n      // Even distribution\n      const evenDuration = totalDuration / columnCount;\n      setColumnDurations(Array(columnCount).fill(evenDuration));\n    } else {\n      // Uneven distribution\n      const durations = [];\n      let remainingDuration = totalDuration;\n      for (let i = 0; i < columnCount - 1; i++) {\n        // Random duration between 0.2 and 2 times the average duration\n        const avgDuration = remainingDuration / (columnCount - i);\n        const duration = avgDuration * (0.2 + Math.random() * 1.8);\n        durations.push(duration);\n        remainingDuration -= duration;\n      }\n\n      // Add the remaining duration to the last column\n      durations.push(remainingDuration);\n      setColumnDurations(durations);\n    }\n  }, [columns, totalDurationSeconds, pacingMode]);\n\n  // Get cumulative duration at each column\n  const getCumulativeDurations = useCallback(() => {\n    const cumulative = [0]; // Start with 0\n    let sum = 0;\n    for (let i = 0; i < columnDurations.length; i++) {\n      sum += columnDurations[i];\n      cumulative.push(sum);\n    }\n    return cumulative;\n  }, [columnDurations]);\n\n  // Calculate which cells should have player cues\n  const calculatePlayerCues = useCallback(() => {\n    const cues = [];\n\n    // Start from the second column (index 1)\n    for (let col = 1; col < columns; col++) {\n      const colChanges = [];\n      for (let row = 0; row < playerNames.length; row++) {\n        const currentState = generatedTable[row][col] ? true : false;\n        const previousState = generatedTable[row][col - 1] ? true : false;\n\n        // If player state changed (on to off, or off to on)\n        if (currentState !== previousState) {\n          colChanges.push(row);\n        }\n      }\n\n      // If there are changes, select one player to be the cue\n      if (colChanges.length > 0) {\n        // Randomly select one player who changed state\n        const randomIndex = Math.floor(Math.random() * colChanges.length);\n        cues.push({\n          col,\n          row: colChanges[randomIndex]\n        });\n      }\n    }\n    setPlayerCues(cues);\n  }, [columns, playerNames, generatedTable]);\n\n  // Fill table with on/off states fairly distributed among players\n  const fillTable = () => {\n    const newTable = [...generatedTable];\n\n    // Track how many active cells each player has\n    const playerCellCounts = Array(playerNames.length).fill(0);\n\n    // Start from column 1 (index 1), skipping the first column\n    for (let col = 1; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1));\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length);\n\n      // Sort players by number of active cells (ascending) to prioritize players with fewer active states\n      const playerIndices = Array.from({\n        length: playerNames.length\n      }, (_, i) => i).sort((a, b) => playerCellCounts[a] - playerCellCounts[b]);\n\n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = '';\n      }\n\n      // Assign active states to selected players (prioritizing those with fewer active states)\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i];\n        newTable[playerIdx][col] = 'on';\n        playerCellCounts[playerIdx]++;\n      }\n    }\n    setGeneratedTable(newTable);\n  };\n\n  // Handle player names from file\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const text = e.target.result;\n      const names = text.split(/[\\n,]/) // Split by newline or comma\n      .map(name => name.trim()).filter(name => name.length > 0);\n      if (names.length > 0) {\n        setPlayerNames(names);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Handle manually adding players\n  const handleAddPlayers = () => {\n    if (!newPlayerInput.trim()) return;\n    const newPlayers = newPlayerInput.split(',').map(name => name.trim()).filter(name => name);\n    if (newPlayers.length > 0) {\n      setPlayerNames([...playerNames, ...newPlayers]);\n      setNewPlayerInput('');\n    }\n  };\n\n  // Handle removing a player\n  const removePlayer = index => {\n    const newPlayers = [...playerNames];\n    newPlayers.splice(index, 1);\n    setPlayerNames(newPlayers);\n  };\n\n  // Handle player reordering\n  const movePlayer = (index, direction) => {\n    if (direction === 'up' && index === 0 || direction === 'down' && index === playerNames.length - 1) {\n      return;\n    }\n    const newPlayers = [...playerNames];\n    const targetIndex = direction === 'up' ? index - 1 : index + 1;\n\n    // Swap positions\n    const temp = newPlayers[index];\n    newPlayers[index] = newPlayers[targetIndex];\n    newPlayers[targetIndex] = temp;\n    setPlayerNames(newPlayers);\n  };\n\n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable];\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'on';\n    setGeneratedTable(newTable);\n  };\n\n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable();\n  };\n\n  // Start/reset slider for timed cues\n  const startSlider = () => {\n    setProgressBarPosition(0);\n    setSliderActive(true);\n    setSliderCompleted(false); // Reset this when starting the slider\n    generateColumnDurations();\n  };\n\n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false);\n  };\n\n  // Reset slider\n  const resetSlider = () => {\n    setProgressBarPosition(0);\n    setSliderActive(false);\n    setSliderCompleted(false); // Reset this when resetting the slider\n  };\n\n  // Check if a cell should display player cue\n  const shouldShowPlayerCue = (rowIdx, colIdx) => {\n    return cueMode === 'player' && playerCues.some(cue => cue.row === rowIdx && cue.col === colIdx);\n  };\n\n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable();\n    generateColumnDurations();\n  }, [playerNames, columns, pacingMode, totalDurationSeconds, generateEmptyTable, generateColumnDurations]);\n\n  // Slider animation for timed cues\n  useEffect(() => {\n    if (sliderActive && cueMode === 'timed') {\n      const startTime = Date.now();\n      const cumulativeDurations = getCumulativeDurations();\n      sliderInterval.current = setInterval(() => {\n        const elapsedTime = (Date.now() - startTime) / 1000;\n        if (elapsedTime >= totalDurationSeconds) {\n          setProgressBarPosition(100);\n          setSliderActive(false);\n          setSliderCompleted(true);\n          clearInterval(sliderInterval.current);\n          return;\n        }\n\n        // Find the current column based on elapsed time\n        let currentColumn = 0;\n        while (currentColumn < cumulativeDurations.length - 1 && elapsedTime > cumulativeDurations[currentColumn + 1]) {\n          currentColumn++;\n        }\n\n        // Calculate progress within the current column\n        const columnStartTime = cumulativeDurations[currentColumn];\n        const columnDuration = columnDurations[currentColumn];\n        const columnProgress = (elapsedTime - columnStartTime) / columnDuration;\n\n        // Calculate overall progress\n        const overallProgress = (currentColumn + columnProgress) / (columns - 1);\n        setProgressBarPosition(overallProgress * 100);\n      }, 33); // ~30 fps update\n    } else if (!sliderActive && sliderInterval.current) {\n      clearInterval(sliderInterval.current);\n    }\n    return () => {\n      if (sliderInterval.current) clearInterval(sliderInterval.current);\n    };\n  }, [sliderActive, cueMode, totalDurationSeconds, columnDurations, columns, getCumulativeDurations]);\n\n  // Update player cues when table changes\n  useEffect(() => {\n    if (cueMode === 'player') {\n      calculatePlayerCues();\n    } else {\n      setPlayerCues([]);\n    }\n  }, [generatedTable, cueMode, calculatePlayerCues]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `settings-panel ${settingsCollapsed ? 'collapsed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSettingsCollapsed(!settingsCollapsed),\n    className: \"collapse-toggle-button\",\n    \"aria-label\": settingsCollapsed ? \"Expand settings\" : \"Collapse settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, settingsCollapsed ? '>' : '<'), !settingsCollapsed && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, \"Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }, \"Add Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-with-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newPlayerInput,\n    onChange: e => setNewPlayerInput(e.target.value),\n    placeholder: \"Names, separated by commas\",\n    className: \"text-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddPlayers,\n    className: \"add-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, \"Player Names File\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".txt,.csv\",\n    onChange: handleFileUpload,\n    ref: fileInputRef,\n    className: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => fileInputRef.current.click(),\n    className: \"file-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, \"Open File\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayerNames([]),\n    className: \"clear-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 21\n    }\n  }, \"Clear All\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 19\n    }\n  }, \"Current Players\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 19\n    }\n  }, playerNames.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-players\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 23\n    }\n  }, \"No players added\") : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"player-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 23\n    }\n  }, playerNames.map((name, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"player-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => movePlayer(index, 'up'),\n    disabled: index === 0,\n    className: `move-button ${index === 0 ? 'disabled' : ''}`,\n    \"aria-label\": \"Move player up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 31\n    }\n  }, \"\\u2191\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => movePlayer(index, 'down'),\n    disabled: index === playerNames.length - 1,\n    className: `move-button ${index === playerNames.length - 1 ? 'disabled' : ''}`,\n    \"aria-label\": \"Move player down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 31\n    }\n  }, \"\\u2193\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removePlayer(index),\n    className: \"remove-button\",\n    \"aria-label\": \"Remove player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 31\n    }\n  }, \"\\xD7\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, \"Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-controls-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }\n  }, \"Columns\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    max: \"20\",\n    value: columns,\n    onChange: e => setColumns(parseInt(e.target.value) || 1),\n    className: \"number-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, \"Min Players\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: minPlayers,\n    onChange: e => setMinPlayers(parseInt(e.target.value) || 0),\n    className: \"number-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  }, \"Max Additional\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: maxAdditionalPlayers,\n    onChange: e => setMaxAdditionalPlayers(parseInt(e.target.value) || 0),\n    className: \"number-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-buttons-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fillTable,\n    className: \"fill-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 19\n    }\n  }, \"Fill Table\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearAllCells,\n    className: \"clear-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 19\n    }\n  }, \"Clear Table\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 17\n    }\n  }, \"Timing\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cue-mode-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCueMode('none'),\n    className: `cue-toggle-button ${cueMode === 'none' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 19\n    }\n  }, \"No cues\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCueMode('player'),\n    className: `cue-toggle-button ${cueMode === 'player' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 19\n    }\n  }, \"Player cues\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCueMode('timed'),\n    className: `cue-toggle-button ${cueMode === 'timed' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 19\n    }\n  }, \"Timed cues\")), cueMode === 'timed' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 3\n    }\n  }, \"Piece duration\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: \"90\",\n    value: durationMinutes,\n    onChange: e => {\n      const mins = Math.min(90, Math.max(0, parseInt(e.target.value) || 0));\n      setDurationMinutes(mins);\n      setTotalDurationSeconds(mins * 60 + durationSeconds);\n    },\n    className: \"time-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 5\n    }\n  }, \"min\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: \"59\",\n    value: durationSeconds,\n    onChange: e => {\n      const secs = Math.min(59, Math.max(0, parseInt(e.target.value) || 0));\n      setDurationSeconds(secs);\n      setTotalDurationSeconds(durationMinutes * 60 + secs);\n    },\n    className: \"time-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 5\n    }\n  }, \"sec\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"30\",\n    max: \"5400\",\n    value: totalDurationSeconds,\n    onChange: e => {\n      const total = parseInt(e.target.value);\n      setTotalDurationSeconds(total);\n      setDurationMinutes(Math.floor(total / 60));\n      setDurationSeconds(total % 60);\n    },\n    className: \"time-slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pacing-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 27\n    }\n  }, \"Pacing\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPacingMode('even'),\n    className: `pacing-button ${pacingMode === 'even' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 29\n    }\n  }, \"Even\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPacingMode('uneven'),\n    className: `pacing-button ${pacingMode === 'uneven' ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 29\n    }\n  }, \"Uneven\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-group mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startSlider,\n    className: \"start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 23\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pauseSlider,\n    className: \"pause-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 23\n    }\n  }, \"Pause\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetSlider,\n    className: \"reset-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 23\n    }\n  }, \"Reset\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `table-container ${settingsCollapsed ? 'full-width' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"main-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"player-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 19\n    }\n  }, \"Players\"), Array.from({\n    length: columns - 1\n  }, (_, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    className: \"column-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 21\n    }\n  }, i + 1)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 15\n    }\n  }, playerNames.map((name, rowIdx) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIdx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"player-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 21\n    }\n  }, name), Array.from({\n    length: columns - 1\n  }, (_, colIdx) => {\n    var _generatedTable$rowId;\n    const adjustedColIdx = colIdx + 1; // Skip player column in data array\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: colIdx,\n      className: `\n                             grid-cell \n                             ${shouldShowPlayerCue(rowIdx, adjustedColIdx) ? 'player-cue' : ''}\n                          `,\n      onClick: () => toggleCell(rowIdx, adjustedColIdx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 25\n      }\n    }, ((_generatedTable$rowId = generatedTable[rowIdx]) === null || _generatedTable$rowId === void 0 ? void 0 : _generatedTable$rowId[adjustedColIdx]) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"player-on\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 29\n      }\n    }));\n  }))))), cueMode === 'timed' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startSlider,\n    className: \"icon-button play-icon-button\",\n    \"aria-label\": \"Start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pauseSlider,\n    className: \"icon-button pause-icon-button\",\n    \"aria-label\": \"Pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-pause-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-pause-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetSlider,\n    className: \"icon-button reset-icon-button\",\n    \"aria-label\": \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    style: {\n      width: `${progressBarPosition}%`,\n      transition: 'width 0.1s linear'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 5\n    }\n  }))))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","OpenGrid","playerNames","setPlayerNames","newPlayerInput","setNewPlayerInput","columns","setColumns","minPlayers","setMinPlayers","maxAdditionalPlayers","setMaxAdditionalPlayers","sliderActive","setSliderActive","durationMinutes","setDurationMinutes","durationSeconds","setDurationSeconds","totalDurationSeconds","setTotalDurationSeconds","generatedTable","setGeneratedTable","settingsCollapsed","setSettingsCollapsed","cueMode","setCueMode","playerCues","setPlayerCues","progressBarPosition","setProgressBarPosition","pacingMode","setPacingMode","columnDurations","setColumnDurations","sliderCompleted","setSliderCompleted","sliderInterval","fileInputRef","generateEmptyTable","newTable","map","name","Array","fill","generateColumnDurations","totalDuration","columnCount","evenDuration","durations","remainingDuration","i","avgDuration","duration","Math","random","push","getCumulativeDurations","cumulative","sum","length","calculatePlayerCues","cues","col","colChanges","row","currentState","previousState","randomIndex","floor","fillTable","playerCellCounts","additionalPlayers","totalPlayers","min","playerIndices","from","_","sort","a","b","playerIdx","handleFileUpload","e","file","target","files","reader","FileReader","onload","text","result","names","split","trim","filter","readAsText","handleAddPlayers","newPlayers","removePlayer","index","splice","movePlayer","direction","targetIndex","temp","toggleCell","rowIdx","colIdx","clearAllCells","startSlider","pauseSlider","resetSlider","shouldShowPlayerCue","some","cue","startTime","Date","now","cumulativeDurations","current","setInterval","elapsedTime","clearInterval","currentColumn","columnStartTime","columnDuration","columnProgress","overallProgress","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","placeholder","accept","ref","click","key","disabled","max","parseInt","Fragment","mins","secs","total","_generatedTable$rowId","adjustedColIdx","style","width","transition"],"sources":["/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/src/OpenGrid.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './OpenGrid.css';\n\nexport default function OpenGrid() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh']);\n  const [newPlayerInput, setNewPlayerInput] = useState('');\n  const [columns, setColumns] = useState(8);\n  const [minPlayers, setMinPlayers] = useState(1);\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1);\n  const [sliderActive, setSliderActive] = useState(false);\n  const [durationMinutes, setDurationMinutes] = useState(0);\n  const [durationSeconds, setDurationSeconds] = useState(30);\n  const [totalDurationSeconds, setTotalDurationSeconds] = useState(30);\n  const [generatedTable, setGeneratedTable] = useState([]);\n  const [settingsCollapsed, setSettingsCollapsed] = useState(false);\n  const [cueMode, setCueMode] = useState('none'); // 'none', 'player', or 'timed'\n  const [playerCues, setPlayerCues] = useState([]);\n  const [progressBarPosition, setProgressBarPosition] = useState(0);\n  const [pacingMode, setPacingMode] = useState('even'); // 'even' or 'uneven'\n  const [columnDurations, setColumnDurations] = useState([]);\n  const [sliderCompleted, setSliderCompleted] = useState(false);\n  \n  const sliderInterval = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Generate empty table\n  const generateEmptyTable = useCallback(() => {\n    const newTable = playerNames.map(name => Array(columns).fill(''));\n    setGeneratedTable(newTable);\n  }, [playerNames, columns]);\n\n  // Generate column durations based on pacing mode\n  const generateColumnDurations = useCallback(() => {\n    if (columns <= 1) return;\n    \n    const totalDuration = totalDurationSeconds;\n    const columnCount = columns - 1; // Exclude player column\n    \n    if (pacingMode === 'even') {\n      // Even distribution\n      const evenDuration = totalDuration / columnCount;\n      setColumnDurations(Array(columnCount).fill(evenDuration));\n    } else {\n      // Uneven distribution\n      const durations = [];\n      let remainingDuration = totalDuration;\n      \n      for (let i = 0; i < columnCount - 1; i++) {\n        // Random duration between 0.2 and 2 times the average duration\n        const avgDuration = remainingDuration / (columnCount - i);\n        const duration = avgDuration * (0.2 + Math.random() * 1.8);\n        durations.push(duration);\n        remainingDuration -= duration;\n      }\n      \n      // Add the remaining duration to the last column\n      durations.push(remainingDuration);\n      \n      setColumnDurations(durations);\n    }\n}, [columns, totalDurationSeconds, pacingMode]);\n\n  // Get cumulative duration at each column\n  const getCumulativeDurations = useCallback(() => {\n    const cumulative = [0]; // Start with 0\n    let sum = 0;\n    for (let i = 0; i < columnDurations.length; i++) {\n      sum += columnDurations[i];\n      cumulative.push(sum);\n    }\n    return cumulative;\n  }, [columnDurations]);\n\n  // Calculate which cells should have player cues\n  const calculatePlayerCues = useCallback(() => {\n    const cues = [];\n    \n    // Start from the second column (index 1)\n    for (let col = 1; col < columns; col++) {\n      const colChanges = [];\n      \n      for (let row = 0; row < playerNames.length; row++) {\n        const currentState = generatedTable[row][col] ? true : false;\n        const previousState = generatedTable[row][col-1] ? true : false;\n        \n        // If player state changed (on to off, or off to on)\n        if (currentState !== previousState) {\n          colChanges.push(row);\n        }\n      }\n      \n      // If there are changes, select one player to be the cue\n      if (colChanges.length > 0) {\n        // Randomly select one player who changed state\n        const randomIndex = Math.floor(Math.random() * colChanges.length);\n        cues.push({ col, row: colChanges[randomIndex] });\n      }\n    }\n    \n    setPlayerCues(cues);\n  }, [columns, playerNames, generatedTable]);\n\n  // Fill table with on/off states fairly distributed among players\n  const fillTable = () => {\n    const newTable = [...generatedTable];\n    \n    // Track how many active cells each player has\n    const playerCellCounts = Array(playerNames.length).fill(0);\n    \n    // Start from column 1 (index 1), skipping the first column\n    for (let col = 1; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1));\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length);\n      \n      // Sort players by number of active cells (ascending) to prioritize players with fewer active states\n      const playerIndices = Array.from({ length: playerNames.length }, (_, i) => i)\n        .sort((a, b) => playerCellCounts[a] - playerCellCounts[b]);\n      \n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = '';\n      }\n      \n      // Assign active states to selected players (prioritizing those with fewer active states)\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i];\n        newTable[playerIdx][col] = 'on';\n        playerCellCounts[playerIdx]++;\n      }\n    }\n    \n    setGeneratedTable(newTable);\n  };\n\n  // Handle player names from file\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const text = e.target.result;\n      const names = text.split(/[\\n,]/) // Split by newline or comma\n        .map(name => name.trim())\n        .filter(name => name.length > 0);\n      \n      if (names.length > 0) {\n        setPlayerNames(names);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Handle manually adding players\n  const handleAddPlayers = () => {\n    if (!newPlayerInput.trim()) return;\n    \n    const newPlayers = newPlayerInput\n      .split(',')\n      .map(name => name.trim())\n      .filter(name => name);\n    \n    if (newPlayers.length > 0) {\n      setPlayerNames([...playerNames, ...newPlayers]);\n      setNewPlayerInput('');\n    }\n  };\n\n  // Handle removing a player\n  const removePlayer = (index) => {\n    const newPlayers = [...playerNames];\n    newPlayers.splice(index, 1);\n    setPlayerNames(newPlayers);\n  };\n\n  // Handle player reordering\n  const movePlayer = (index, direction) => {\n    if ((direction === 'up' && index === 0) || \n        (direction === 'down' && index === playerNames.length - 1)) {\n      return;\n    }\n    \n    const newPlayers = [...playerNames];\n    const targetIndex = direction === 'up' ? index - 1 : index + 1;\n    \n    // Swap positions\n    const temp = newPlayers[index];\n    newPlayers[index] = newPlayers[targetIndex];\n    newPlayers[targetIndex] = temp;\n    setPlayerNames(newPlayers);\n  };\n\n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable];\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'on';\n    setGeneratedTable(newTable);\n  };\n\n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable();\n  };\n\n  // Start/reset slider for timed cues\n  const startSlider = () => {\n    setProgressBarPosition(0);\n    setSliderActive(true);\n    setSliderCompleted(false);  // Reset this when starting the slider\n    generateColumnDurations();\n  };\n\n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false);\n  };\n\n  // Reset slider\n  const resetSlider = () => {\n    setProgressBarPosition(0);\n    setSliderActive(false);\n    setSliderCompleted(false);  // Reset this when resetting the slider\n  };\n\n  // Check if a cell should display player cue\n  const shouldShowPlayerCue = (rowIdx, colIdx) => {\n    return cueMode === 'player' && playerCues.some(cue => cue.row === rowIdx && cue.col === colIdx);\n  };\n\n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable();\n    generateColumnDurations();\n }, [playerNames, columns, pacingMode, totalDurationSeconds, generateEmptyTable, generateColumnDurations]);\n\n  // Slider animation for timed cues\n  useEffect(() => {\n    if (sliderActive && cueMode === 'timed') {\n      const startTime = Date.now();\n      const cumulativeDurations = getCumulativeDurations();\n      \n      sliderInterval.current = setInterval(() => {\n        const elapsedTime = (Date.now() - startTime) / 1000;\n        \n        if (elapsedTime >= totalDurationSeconds) {\n  setProgressBarPosition(100);\n  setSliderActive(false);\n  setSliderCompleted(true);\n  clearInterval(sliderInterval.current);\n  return;\n}\n        \n        // Find the current column based on elapsed time\n        let currentColumn = 0;\n        while (currentColumn < cumulativeDurations.length - 1 && \n               elapsedTime > cumulativeDurations[currentColumn + 1]) {\n          currentColumn++;\n        }\n        \n        // Calculate progress within the current column\n        const columnStartTime = cumulativeDurations[currentColumn];\n        const columnDuration = columnDurations[currentColumn];\n        const columnProgress = (elapsedTime - columnStartTime) / columnDuration;\n        \n        // Calculate overall progress\n        const overallProgress = (currentColumn + columnProgress) / (columns - 1);\n        setProgressBarPosition(overallProgress * 100);\n        \n      }, 33); // ~30 fps update\n    } else if (!sliderActive && sliderInterval.current) {\n      clearInterval(sliderInterval.current);\n    }\n    \n    return () => {\n      if (sliderInterval.current) clearInterval(sliderInterval.current);\n    };\n  }, [sliderActive, cueMode, totalDurationSeconds, columnDurations, columns, getCumulativeDurations]);\n\n  // Update player cues when table changes\n  useEffect(() => {\n    if (cueMode === 'player') {\n      calculatePlayerCues();\n    } else {\n      setPlayerCues([]);\n    }\n  }, [generatedTable, cueMode, calculatePlayerCues]);\n\n  return (\n    <div className=\"app-container\">\n      {/* Main Container */}\n      <div className=\"main-layout\">\n        {/* Settings Panel (Left Side) */}\n        <div className={`settings-panel ${settingsCollapsed ? 'collapsed' : ''}`}>\n          {/* Collapse/Expand Toggle */}\n          <button \n            onClick={() => setSettingsCollapsed(!settingsCollapsed)}\n            className=\"collapse-toggle-button\"\n            aria-label={settingsCollapsed ? \"Expand settings\" : \"Collapse settings\"}\n          >\n            {settingsCollapsed ? '>' : '<'}\n          </button>\n          \n          {!settingsCollapsed && (\n            <div className=\"settings-content\">\n              {/* Players Management */}\n              <div className=\"settings-section\">\n                <h2 className=\"section-title\">Players</h2>\n                \n                {/* Add Players */}\n                <div className=\"control-group\">\n                  <label>Add Players</label>\n                  <div className=\"input-with-button\">\n                    <input \n                      type=\"text\" \n                      value={newPlayerInput} \n                      onChange={(e) => setNewPlayerInput(e.target.value)}\n                      placeholder=\"Names, separated by commas\"\n                      className=\"text-input\"\n                    />\n                    <button \n                      onClick={handleAddPlayers}\n                      className=\"add-button\"\n                    >\n                      Add\n                    </button>\n                  </div>\n                </div>\n                \n                {/* File Upload */}\n                <div className=\"control-group\">\n                  <label>Player Names File</label>\n                  <div className=\"button-group\">\n                    <input \n                      type=\"file\" \n                      accept=\".txt,.csv\" \n                      onChange={handleFileUpload} \n                      ref={fileInputRef}\n                      className=\"hidden\"\n                    />\n                    <button \n                      onClick={() => fileInputRef.current.click()}\n                      className=\"file-button\"\n                    >\n                      Open File\n                    </button>\n                    <button \n                      onClick={() => setPlayerNames([])}\n                      className=\"clear-button\"\n                    >\n                      Clear All\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Player List */}\n                <div className=\"control-group\">\n                  <label>Current Players</label>\n                  <div className=\"player-list-container\">\n                    {playerNames.length === 0 ? (\n                      <div className=\"no-players\">No players added</div>\n                    ) : (\n                      <ul className=\"player-list\">\n                        {playerNames.map((name, index) => (\n                          <li key={index} className=\"player-item\">\n                            <span className=\"player-name\">{name}</span>\n                            <div className=\"player-controls\">\n                              <button \n                                onClick={() => movePlayer(index, 'up')}\n                                disabled={index === 0}\n                                className={`move-button ${index === 0 ? 'disabled' : ''}`}\n                                aria-label=\"Move player up\"\n                              >\n                                ↑\n                              </button>\n                              <button \n                                onClick={() => movePlayer(index, 'down')}\n                                disabled={index === playerNames.length - 1}\n                                className={`move-button ${index === playerNames.length - 1 ? 'disabled' : ''}`}\n                                aria-label=\"Move player down\"\n                              >\n                                ↓\n                              </button>\n                              <button \n                                onClick={() => removePlayer(index)}\n                                className=\"remove-button\"\n                                aria-label=\"Remove player\"\n                              >\n                                ×\n                              </button>\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Table Configuration */}\n              <div className=\"settings-section\">\n                <h2 className=\"section-title\">Table</h2>\n                \n                <div className=\"table-controls-row\">\n                  <div className=\"control-group\">\n                    <label>Columns</label>\n                    <input \n                      type=\"number\" \n                      min=\"1\" \n                      max=\"20\" \n                      value={columns} \n                      onChange={(e) => setColumns(parseInt(e.target.value) || 1)}\n                      className=\"number-input\"\n                    />\n                  </div>\n                  \n                  <div className=\"control-group\">\n                    <label>Min Players</label>\n                    <input \n                      type=\"number\" \n                      min=\"0\" \n                      max={playerNames.length} \n                      value={minPlayers} \n                      onChange={(e) => setMinPlayers(parseInt(e.target.value) || 0)}\n                      className=\"number-input\"\n                    />\n                  </div>\n                  \n                  <div className=\"control-group\">\n                    <label>Max Additional</label>\n                    <input \n                      type=\"number\" \n                      min=\"0\" \n                      max={playerNames.length} \n                      value={maxAdditionalPlayers} \n                      onChange={(e) => setMaxAdditionalPlayers(parseInt(e.target.value) || 0)}\n                      className=\"number-input\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"table-buttons-row\">\n                  <button \n                    onClick={fillTable}\n                    className=\"fill-button\"\n                  >\n                    Fill Table\n                  </button>\n                  <button \n                    onClick={clearAllCells}\n                    className=\"clear-button\"\n                  >\n                    Clear Table\n                  </button>\n                </div>\n              </div>\n              \n              {/* Timing Cues Controls */}\n              <div className=\"settings-section\">\n                <h2 className=\"section-title\">Timing</h2>\n                \n                <div className=\"cue-mode-selector\">\n                  <button \n                    onClick={() => setCueMode('none')}\n                    className={`cue-toggle-button ${cueMode === 'none' ? 'active' : ''}`}\n                  >\n                    No cues\n                  </button>\n                  <button \n                    onClick={() => setCueMode('player')}\n                    className={`cue-toggle-button ${cueMode === 'player' ? 'active' : ''}`}\n                  >\n                    Player cues\n                  </button>\n                  <button \n                    onClick={() => setCueMode('timed')}\n                    className={`cue-toggle-button ${cueMode === 'timed' ? 'active' : ''}`}\n                  >\n                    Timed cues\n                  </button>\n                </div>\n                \n                {cueMode === 'timed' && (\n                  <>\n                    <div className=\"control-group mt-10\">\n                      <div className=\"settings-row\">\n                        <div>\n  <label>Piece duration</label>\n  <div className=\"time-input-container\">\n    <input \n      type=\"number\" \n      min=\"0\" \n      max=\"90\"\n      value={durationMinutes} \n      onChange={(e) => {\n        const mins = Math.min(90, Math.max(0, parseInt(e.target.value) || 0));\n        setDurationMinutes(mins);\n        setTotalDurationSeconds(mins * 60 + durationSeconds);\n      }}\n      className=\"time-input\"\n    />\n    <span className=\"time-label\">min</span>\n    <input \n      type=\"number\" \n      min=\"0\" \n      max=\"59\"\n      value={durationSeconds} \n      onChange={(e) => {\n        const secs = Math.min(59, Math.max(0, parseInt(e.target.value) || 0));\n        setDurationSeconds(secs);\n        setTotalDurationSeconds(durationMinutes * 60 + secs);\n      }}\n      className=\"time-input\"\n    />\n    <span className=\"time-label\">sec</span>\n  </div>\n  <input\n    type=\"range\"\n    min=\"30\"\n    max=\"5400\"\n    value={totalDurationSeconds}\n    onChange={(e) => {\n      const total = parseInt(e.target.value);\n      setTotalDurationSeconds(total);\n      setDurationMinutes(Math.floor(total / 60));\n      setDurationSeconds(total % 60);\n    }}\n    className=\"time-slider\"\n  />\n</div>\n                        \n                        <div className=\"pacing-controls\">\n                          <label>Pacing</label>\n                          <div className=\"button-group\">\n                            <button \n                              onClick={() => setPacingMode('even')}\n                              className={`pacing-button ${pacingMode === 'even' ? 'active' : ''}`}\n                            >\n                              Even\n                            </button>\n                            <button \n                              onClick={() => setPacingMode('uneven')}\n                              className={`pacing-button ${pacingMode === 'uneven' ? 'active' : ''}`}\n                            >\n                              Uneven\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"button-group mt-10\">\n                      <button \n                        onClick={startSlider} \n                        className=\"start-button\"\n                      >\n                        Start\n                      </button>\n                      <button \n                        onClick={pauseSlider}\n                        className=\"pause-button\"\n                      >\n                        Pause\n                      </button>\n                      <button \n                        onClick={resetSlider}\n                        className=\"reset-button\"\n                      >\n                        Reset\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Main Table Display (Right Side) */}\n        <div className={`table-container ${settingsCollapsed ? 'full-width' : ''}`}>\n          <div className=\"table-wrapper\">\n            <table className=\"main-table\">\n              <thead>\n                <tr>\n                  <th className=\"player-header\">Players</th>\n                  {Array.from({ length: columns - 1 }, (_, i) => (\n                    <th key={i} className=\"column-header\">\n                      {i + 1}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {playerNames.map((name, rowIdx) => (\n                  <tr key={rowIdx}>\n                    <td className=\"player-cell\">\n                      {name}\n                    </td>\n                    {Array.from({ length: columns - 1 }, (_, colIdx) => {\n                      const adjustedColIdx = colIdx + 1; // Skip player column in data array\n                      return (\n                        <td \n                          key={colIdx} \n                          className={`\n                             grid-cell \n                             ${shouldShowPlayerCue(rowIdx, adjustedColIdx) ? 'player-cue' : ''}\n                          `}\n                          onClick={() => toggleCell(rowIdx, adjustedColIdx)}\n                        >\n                          {generatedTable[rowIdx]?.[adjustedColIdx] && (\n                            <div className=\"player-on\"></div>\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            \n            {/* Progress bar with controls */}\n{cueMode === 'timed' && (\n  <div className=\"progress-container\">\n    <div className=\"progress-controls\">\n      <button \n        onClick={startSlider} \n        className=\"icon-button play-icon-button\"\n        aria-label=\"Start\"\n      >\n        <div className=\"icon-play\"></div>\n      </button>\n      <button \n        onClick={pauseSlider}\n        className=\"icon-button pause-icon-button\"\n        aria-label=\"Pause\"\n      >\n        <div className=\"icon-pause\">\n          <div className=\"icon-pause-bar\"></div>\n          <div className=\"icon-pause-bar\"></div>\n        </div>\n      </button>\n      <button \n        onClick={resetSlider}\n        className=\"icon-button reset-icon-button\"\n        aria-label=\"Reset\"\n      >\n        <div className=\"icon-reset\"></div>\n      </button>\n    </div>\n    <div \n      className=\"progress-bar\"\n      style={{\n        width: `${progressBarPosition}%`,\n        transition: 'width 0.1s linear'\n      }}\n    />\n  </div>\n)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}