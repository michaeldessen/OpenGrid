{"ast":null,"code":"var _jsxFileName = \"/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/OpenGrid/src/App.jsx\";\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nexport default function ImprovisationalStructureGenerator() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh']);\n  const [columns, setColumns] = useState(8);\n  const [minPlayers, setMinPlayers] = useState(1);\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1);\n  const [sliderPosition, setSliderPosition] = useState(-1);\n  const [sliderActive, setSliderActive] = useState(false);\n  const [sliderVisible, setSliderVisible] = useState(true);\n  const [sliderDuration, setSliderDuration] = useState(30);\n  const [generatedTable, setGeneratedTable] = useState([]);\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [cellMode, setCellMode] = useState('cell'); // 'none' or 'cell'\n\n  const sliderInterval = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable();\n  }, [playerNames, columns]);\n\n  // Slider animation\n  useEffect(() => {\n    if (sliderActive && sliderVisible) {\n      sliderInterval.current = setInterval(() => {\n        setSliderPosition(prev => {\n          const newPos = prev + 1;\n          if (newPos >= columns) {\n            setSliderActive(false);\n            return -1;\n          }\n          return newPos;\n        });\n      }, sliderDuration * 1000 / columns);\n    } else if (!sliderActive && sliderInterval.current) {\n      clearInterval(sliderInterval.current);\n    }\n    return () => {\n      if (sliderInterval.current) clearInterval(sliderInterval.current);\n    };\n  }, [sliderActive, sliderVisible, columns, sliderDuration]);\n\n  // Generate empty table\n  const generateEmptyTable = () => {\n    const newTable = playerNames.map(name => Array(columns).fill(''));\n    setGeneratedTable(newTable);\n  };\n\n  // Fill table with cues randomly based on parameters\n  const fillTable = () => {\n    const newTable = [...generatedTable];\n    for (let col = 0; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1));\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length);\n\n      // Create array of player indices and shuffle it\n      const playerIndices = Array.from({\n        length: playerNames.length\n      }, (_, i) => i);\n      for (let i = playerIndices.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [playerIndices[i], playerIndices[j]] = [playerIndices[j], playerIndices[i]];\n      }\n\n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = '';\n      }\n\n      // Assign cues to selected players\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i];\n        newTable[playerIdx][col] = 'X';\n      }\n    }\n    setGeneratedTable(newTable);\n  };\n\n  // Handle player names from file\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const text = e.target.result;\n      const lines = text.split('\\n');\n      const names = lines.filter(line => line.trim()).map(line => {\n        const match = line.match(/\\d+,\\s*\\d+\\s+([^;]+);/);\n        return match ? match[1].trim() : null;\n      }).filter(Boolean);\n      if (names.length > 0) {\n        setPlayerNames(names);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable];\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'X';\n    setGeneratedTable(newTable);\n  };\n\n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable();\n  };\n\n  // Start/reset slider\n  const startSlider = () => {\n    setSliderPosition(0);\n    setSliderActive(true);\n  };\n\n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false);\n  };\n\n  // Reset slider\n  const resetSlider = () => {\n    setSliderPosition(-1);\n    setSliderActive(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col gap-6 p-6 bg-gray-100 max-w-6xl mx-auto rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Improvisational Structure Generator\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Setup\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Player Names File\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".txt\",\n    onChange: handleFileUpload,\n    ref: fileInputRef,\n    className: \"hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => fileInputRef.current.click(),\n    className: \"bg-blue-100 border border-gray-400 px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"Open File\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setPlayerNames([]),\n    className: \"bg-gray-200 border border-gray-400 px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Clear Names\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Number of Columns\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    max: \"20\",\n    value: columns,\n    onChange: e => setColumns(parseInt(e.target.value) || 1),\n    className: \"border border-gray-400 px-3 py-1 rounded w-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"Reset Table/Slider\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearAllCells,\n    className: \"bg-gray-200 border border-gray-400 px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Clear All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetSlider,\n    className: \"bg-red-100 border border-gray-400 px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Reset\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Slider\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Duration (seconds)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    value: sliderDuration,\n    onChange: e => setSliderDuration(parseInt(e.target.value) || 30),\n    className: \"border border-gray-400 px-3 py-1 rounded w-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Visibility\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSliderVisible(true),\n    className: `border px-3 py-1 rounded ${sliderVisible ? 'bg-orange-400 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, \"Show\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setSliderVisible(false),\n    className: `border px-3 py-1 rounded ${!sliderVisible ? 'bg-gray-500 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"Hide\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Controls\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startSlider,\n    className: \"bg-green-200 border border-gray-400 px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: pauseSlider,\n    className: \"bg-blue-200 border border-gray-400 px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"Pause\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, \"Table\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"Min Players per Column\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: minPlayers,\n    onChange: e => setMinPlayers(parseInt(e.target.value) || 0),\n    className: \"border border-gray-400 px-3 py-1 rounded w-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Max Additional Players\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    max: playerNames.length,\n    value: maxAdditionalPlayers,\n    onChange: e => setMaxAdditionalPlayers(parseInt(e.target.value) || 0),\n    className: \"border border-gray-400 px-3 py-1 rounded w-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Fill Table\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fillTable,\n    className: \"bg-red-400 text-white border border-gray-400 px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, \"Fill\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-yellow-100 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-bold mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, \"Cell Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCellMode('none'),\n    className: `border px-3 py-1 rounded ${cellMode === 'none' ? 'bg-orange-400 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCellMode('cell'),\n    className: `border px-3 py-1 rounded ${cellMode === 'cell' ? 'bg-gray-500 text-white' : 'bg-gray-200'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, \"Cell\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overflow-x-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"border-collapse border w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"border border-gray-400 p-2 bg-gray-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }, \"Players\"), Array.from({\n    length: columns\n  }, (_, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    className: \"border border-gray-400 p-2 bg-gray-100 w-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, i + 1)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 11\n    }\n  }, playerNames.map((name, rowIdx) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIdx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"border border-gray-400 p-2 bg-gray-100 font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, name), Array.from({\n    length: columns\n  }, (_, colIdx) => {\n    var _generatedTable$rowId;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: colIdx,\n      className: `border border-gray-400 p-0 text-center relative h-12 w-12\n                      ${colIdx === sliderPosition && sliderVisible ? 'bg-yellow-200' : 'bg-white'}\n                    `,\n      onClick: () => toggleCell(rowIdx, colIdx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 19\n      }\n    }, ((_generatedTable$rowId = generatedTable[rowIdx]) === null || _generatedTable$rowId === void 0 ? void 0 : _generatedTable$rowId[colIdx]) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center font-bold text-xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 23\n      }\n    }, \"X\"));\n  })))))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","ImprovisationalStructureGenerator","playerNames","setPlayerNames","columns","setColumns","minPlayers","setMinPlayers","maxAdditionalPlayers","setMaxAdditionalPlayers","sliderPosition","setSliderPosition","sliderActive","setSliderActive","sliderVisible","setSliderVisible","sliderDuration","setSliderDuration","generatedTable","setGeneratedTable","selectedCell","setSelectedCell","cellMode","setCellMode","sliderInterval","fileInputRef","generateEmptyTable","current","setInterval","prev","newPos","clearInterval","newTable","map","name","Array","fill","fillTable","col","additionalPlayers","Math","floor","random","totalPlayers","min","length","playerIndices","from","_","i","j","row","playerIdx","handleFileUpload","e","file","target","files","reader","FileReader","onload","text","result","lines","split","names","filter","line","trim","match","Boolean","readAsText","toggleCell","rowIdx","colIdx","clearAllCells","startSlider","pauseSlider","resetSlider","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","onClick","click","max","value","parseInt","key","_generatedTable$rowId"],"sources":["/Users/michael/michael/cronopio/projects/software-experiments/OpenGrid/OpenGrid/OpenGrid/src/App.jsx"],"sourcesContent":["import React from 'react';\n\n\nimport { useState, useEffect, useRef } from 'react'\n\nexport default function ImprovisationalStructureGenerator() {\n  // State variables\n  const [playerNames, setPlayerNames] = useState(['Lisa', 'Rebecca', 'Michael', 'Willie', 'Shivangi', 'Chieh'])\n  const [columns, setColumns] = useState(8)\n  const [minPlayers, setMinPlayers] = useState(1)\n  const [maxAdditionalPlayers, setMaxAdditionalPlayers] = useState(1)\n  const [sliderPosition, setSliderPosition] = useState(-1)\n  const [sliderActive, setSliderActive] = useState(false)\n  const [sliderVisible, setSliderVisible] = useState(true)\n  const [sliderDuration, setSliderDuration] = useState(30)\n  const [generatedTable, setGeneratedTable] = useState([])\n  const [selectedCell, setSelectedCell] = useState(null)\n  const [cellMode, setCellMode] = useState('cell') // 'none' or 'cell'\n  \n  const sliderInterval = useRef(null)\n  const fileInputRef = useRef(null)\n  \n  // Initialize table on first load\n  useEffect(() => {\n    generateEmptyTable()\n  }, [playerNames, columns])\n  \n  // Slider animation\n  useEffect(() => {\n    if (sliderActive && sliderVisible) {\n      sliderInterval.current = setInterval(() => {\n        setSliderPosition(prev => {\n          const newPos = prev + 1\n          if (newPos >= columns) {\n            setSliderActive(false)\n            return -1\n          }\n          return newPos\n        })\n      }, (sliderDuration * 1000) / columns)\n    } else if (!sliderActive && sliderInterval.current) {\n      clearInterval(sliderInterval.current)\n    }\n    \n    return () => {\n      if (sliderInterval.current) clearInterval(sliderInterval.current)\n    }\n  }, [sliderActive, sliderVisible, columns, sliderDuration])\n  \n  // Generate empty table\n  const generateEmptyTable = () => {\n    const newTable = playerNames.map(name => Array(columns).fill(''))\n    setGeneratedTable(newTable)\n  }\n  \n  // Fill table with cues randomly based on parameters\n  const fillTable = () => {\n    const newTable = [...generatedTable]\n    \n    for (let col = 0; col < columns; col++) {\n      // Calculate how many players to assign in this column\n      const additionalPlayers = Math.floor(Math.random() * (maxAdditionalPlayers + 1))\n      const totalPlayers = Math.min(minPlayers + additionalPlayers, playerNames.length)\n      \n      // Create array of player indices and shuffle it\n      const playerIndices = Array.from({ length: playerNames.length }, (_, i) => i)\n      for (let i = playerIndices.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [playerIndices[i], playerIndices[j]] = [playerIndices[j], playerIndices[i]]\n      }\n      \n      // Clear column first\n      for (let row = 0; row < playerNames.length; row++) {\n        newTable[row][col] = ''\n      }\n      \n      // Assign cues to selected players\n      for (let i = 0; i < totalPlayers; i++) {\n        const playerIdx = playerIndices[i]\n        newTable[playerIdx][col] = 'X'\n      }\n    }\n    \n    setGeneratedTable(newTable)\n  }\n  \n  // Handle player names from file\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0]\n    if (!file) return\n    \n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const text = e.target.result\n      const lines = text.split('\\n')\n      const names = lines\n        .filter(line => line.trim())\n        .map(line => {\n          const match = line.match(/\\d+,\\s*\\d+\\s+([^;]+);/)\n          return match ? match[1].trim() : null\n        })\n        .filter(Boolean)\n      \n      if (names.length > 0) {\n        setPlayerNames(names)\n      }\n    }\n    reader.readAsText(file)\n  }\n  \n  // Toggle cell state\n  const toggleCell = (rowIdx, colIdx) => {\n    const newTable = [...generatedTable]\n    newTable[rowIdx][colIdx] = newTable[rowIdx][colIdx] ? '' : 'X'\n    setGeneratedTable(newTable)\n  }\n  \n  // Clear all cells\n  const clearAllCells = () => {\n    generateEmptyTable()\n  }\n  \n  // Start/reset slider\n  const startSlider = () => {\n    setSliderPosition(0)\n    setSliderActive(true)\n  }\n  \n  // Pause slider\n  const pauseSlider = () => {\n    setSliderActive(false)\n  }\n  \n  // Reset slider\n  const resetSlider = () => {\n    setSliderPosition(-1)\n    setSliderActive(false)\n  }\n  \n  return (\n    <div className=\"flex flex-col gap-6 p-6 bg-gray-100 max-w-6xl mx-auto rounded-lg\">\n      <h1 className=\"text-2xl font-bold text-center\">Improvisational Structure Generator</h1>\n      \n      {/* Setup Panel */}\n      <div className=\"bg-yellow-100 p-4 rounded-lg\">\n        <h2 className=\"font-bold mb-3\">Setup</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block mb-1\">Player Names File</label>\n            <div className=\"flex gap-2\">\n              <input \n                type=\"file\" \n                accept=\".txt\" \n                onChange={handleFileUpload} \n                ref={fileInputRef}\n                className=\"hidden\"\n              />\n              <button \n                onClick={() => fileInputRef.current.click()}\n                className=\"bg-blue-100 border border-gray-400 px-3 py-1 rounded\"\n              >\n                Open File\n              </button>\n              <button \n                onClick={() => setPlayerNames([])}\n                className=\"bg-gray-200 border border-gray-400 px-3 py-1 rounded\"\n              >\n                Clear Names\n              </button>\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"block mb-1\">Number of Columns</label>\n            <input \n              type=\"number\" \n              min=\"1\" \n              max=\"20\" \n              value={columns} \n              onChange={(e) => setColumns(parseInt(e.target.value) || 1)}\n              className=\"border border-gray-400 px-3 py-1 rounded w-16\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block mb-1\">Reset Table/Slider</label>\n            <div className=\"flex gap-2\">\n              <button \n                onClick={clearAllCells}\n                className=\"bg-gray-200 border border-gray-400 px-3 py-1 rounded\"\n              >\n                Clear All\n              </button>\n              <button \n                onClick={resetSlider}\n                className=\"bg-red-100 border border-gray-400 px-3 py-1 rounded\"\n              >\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Slider Controls */}\n      <div className=\"bg-yellow-100 p-4 rounded-lg\">\n        <h2 className=\"font-bold mb-3\">Slider</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block mb-1\">Duration (seconds)</label>\n            <input \n              type=\"number\" \n              min=\"1\" \n              value={sliderDuration} \n              onChange={(e) => setSliderDuration(parseInt(e.target.value) || 30)}\n              className=\"border border-gray-400 px-3 py-1 rounded w-16\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block mb-1\">Visibility</label>\n            <div className=\"flex gap-2\">\n              <button \n                onClick={() => setSliderVisible(true)}\n                className={`border px-3 py-1 rounded ${sliderVisible ? 'bg-orange-400 text-white' : 'bg-gray-200'}`}\n              >\n                Show\n              </button>\n              <button \n                onClick={() => setSliderVisible(false)}\n                className={`border px-3 py-1 rounded ${!sliderVisible ? 'bg-gray-500 text-white' : 'bg-gray-200'}`}\n              >\n                Hide\n              </button>\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"block mb-1\">Controls</label>\n            <div className=\"flex gap-2\">\n              <button \n                onClick={startSlider} \n                className=\"bg-green-200 border border-gray-400 px-3 py-1 rounded\"\n              >\n                Start\n              </button>\n              <button \n                onClick={pauseSlider}\n                className=\"bg-blue-200 border border-gray-400 px-3 py-1 rounded\"\n              >\n                Pause\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Table Configuration */}\n      <div className=\"bg-yellow-100 p-4 rounded-lg\">\n        <h2 className=\"font-bold mb-3\">Table</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block mb-1\">Min Players per Column</label>\n            <input \n              type=\"number\" \n              min=\"0\" \n              max={playerNames.length} \n              value={minPlayers} \n              onChange={(e) => setMinPlayers(parseInt(e.target.value) || 0)}\n              className=\"border border-gray-400 px-3 py-1 rounded w-16\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block mb-1\">Max Additional Players</label>\n            <input \n              type=\"number\" \n              min=\"0\" \n              max={playerNames.length} \n              value={maxAdditionalPlayers} \n              onChange={(e) => setMaxAdditionalPlayers(parseInt(e.target.value) || 0)}\n              className=\"border border-gray-400 px-3 py-1 rounded w-16\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block mb-1\">Fill Table</label>\n            <button \n              onClick={fillTable}\n              className=\"bg-red-400 text-white border border-gray-400 px-3 py-1 rounded\"\n            >\n              Fill\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Cell Options */}\n      <div className=\"bg-yellow-100 p-4 rounded-lg\">\n        <h2 className=\"font-bold mb-3\">Cell Mode</h2>\n        <div className=\"flex gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <button \n              onClick={() => setCellMode('none')}\n              className={`border px-3 py-1 rounded ${cellMode === 'none' ? 'bg-orange-400 text-white' : 'bg-gray-200'}`}\n            >\n              None\n            </button>\n            <button \n              onClick={() => setCellMode('cell')}\n              className={`border px-3 py-1 rounded ${cellMode === 'cell' ? 'bg-gray-500 text-white' : 'bg-gray-200'}`}\n            >\n              Cell\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Main Table Display */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"border-collapse border w-full\">\n          <thead>\n            <tr>\n              <th className=\"border border-gray-400 p-2 bg-gray-100\">Players</th>\n              {Array.from({ length: columns }, (_, i) => (\n                <th key={i} className=\"border border-gray-400 p-2 bg-gray-100 w-12 text-center\">\n                  {i + 1}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {playerNames.map((name, rowIdx) => (\n              <tr key={rowIdx}>\n                <td className=\"border border-gray-400 p-2 bg-gray-100 font-medium\">\n                  {name}\n                </td>\n                {Array.from({ length: columns }, (_, colIdx) => (\n                  <td \n                    key={colIdx} \n                    className={`border border-gray-400 p-0 text-center relative h-12 w-12\n                      ${colIdx === sliderPosition && sliderVisible ? 'bg-yellow-200' : 'bg-white'}\n                    `}\n                    onClick={() => toggleCell(rowIdx, colIdx)}\n                  >\n                    {generatedTable[rowIdx]?.[colIdx] && (\n                      <div className=\"absolute inset-0 flex items-center justify-center font-bold text-xl\">\n                        X\n                      </div>\n                    )}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,eAAe,SAASC,iCAAiCA,CAAA,EAAG;EAC1D;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;EAC7G,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,MAAM,CAAC,EAAC;;EAEjD,MAAM0B,cAAc,GAAGxB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMyB,YAAY,GAAGzB,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACAD,SAAS,CAAC,MAAM;IACd2B,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACxB,WAAW,EAAEE,OAAO,CAAC,CAAC;;EAE1B;EACAL,SAAS,CAAC,MAAM;IACd,IAAIa,YAAY,IAAIE,aAAa,EAAE;MACjCU,cAAc,CAACG,OAAO,GAAGC,WAAW,CAAC,MAAM;QACzCjB,iBAAiB,CAACkB,IAAI,IAAI;UACxB,MAAMC,MAAM,GAAGD,IAAI,GAAG,CAAC;UACvB,IAAIC,MAAM,IAAI1B,OAAO,EAAE;YACrBS,eAAe,CAAC,KAAK,CAAC;YACtB,OAAO,CAAC,CAAC;UACX;UACA,OAAOiB,MAAM;QACf,CAAC,CAAC;MACJ,CAAC,EAAGd,cAAc,GAAG,IAAI,GAAIZ,OAAO,CAAC;IACvC,CAAC,MAAM,IAAI,CAACQ,YAAY,IAAIY,cAAc,CAACG,OAAO,EAAE;MAClDI,aAAa,CAACP,cAAc,CAACG,OAAO,CAAC;IACvC;IAEA,OAAO,MAAM;MACX,IAAIH,cAAc,CAACG,OAAO,EAAEI,aAAa,CAACP,cAAc,CAACG,OAAO,CAAC;IACnE,CAAC;EACH,CAAC,EAAE,CAACf,YAAY,EAAEE,aAAa,EAAEV,OAAO,EAAEY,cAAc,CAAC,CAAC;;EAE1D;EACA,MAAMU,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMM,QAAQ,GAAG9B,WAAW,CAAC+B,GAAG,CAACC,IAAI,IAAIC,KAAK,CAAC/B,OAAO,CAAC,CAACgC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjEjB,iBAAiB,CAACa,QAAQ,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAML,QAAQ,GAAG,CAAC,GAAGd,cAAc,CAAC;IAEpC,KAAK,IAAIoB,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGlC,OAAO,EAAEkC,GAAG,EAAE,EAAE;MACtC;MACA,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIlC,oBAAoB,GAAG,CAAC,CAAC,CAAC;MAChF,MAAMmC,YAAY,GAAGH,IAAI,CAACI,GAAG,CAACtC,UAAU,GAAGiC,iBAAiB,EAAErC,WAAW,CAAC2C,MAAM,CAAC;;MAEjF;MACA,MAAMC,aAAa,GAAGX,KAAK,CAACY,IAAI,CAAC;QAAEF,MAAM,EAAE3C,WAAW,CAAC2C;MAAO,CAAC,EAAE,CAACG,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC;MAC7E,KAAK,IAAIA,CAAC,GAAGH,aAAa,CAACD,MAAM,GAAG,CAAC,EAAEI,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QACjD,MAAMC,CAAC,GAAGV,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,CAACH,aAAa,CAACG,CAAC,CAAC,EAAEH,aAAa,CAACI,CAAC,CAAC,CAAC,GAAG,CAACJ,aAAa,CAACI,CAAC,CAAC,EAAEJ,aAAa,CAACG,CAAC,CAAC,CAAC;MAC7E;;MAEA;MACA,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGjD,WAAW,CAAC2C,MAAM,EAAEM,GAAG,EAAE,EAAE;QACjDnB,QAAQ,CAACmB,GAAG,CAAC,CAACb,GAAG,CAAC,GAAG,EAAE;MACzB;;MAEA;MACA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,EAAEM,CAAC,EAAE,EAAE;QACrC,MAAMG,SAAS,GAAGN,aAAa,CAACG,CAAC,CAAC;QAClCjB,QAAQ,CAACoB,SAAS,CAAC,CAACd,GAAG,CAAC,GAAG,GAAG;MAChC;IACF;IAEAnB,iBAAiB,CAACa,QAAQ,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMqB,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIN,CAAC,IAAK;MACrB,MAAMO,IAAI,GAAGP,CAAC,CAACE,MAAM,CAACM,MAAM;MAC5B,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC;MAC9B,MAAMC,KAAK,GAAGF,KAAK,CAChBG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BnC,GAAG,CAACkC,IAAI,IAAI;QACX,MAAME,KAAK,GAAGF,IAAI,CAACE,KAAK,CAAC,uBAAuB,CAAC;QACjD,OAAOA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC,CAAC,GAAG,IAAI;MACvC,CAAC,CAAC,CACDF,MAAM,CAACI,OAAO,CAAC;MAElB,IAAIL,KAAK,CAACpB,MAAM,GAAG,CAAC,EAAE;QACpB1C,cAAc,CAAC8D,KAAK,CAAC;MACvB;IACF,CAAC;IACDP,MAAM,CAACa,UAAU,CAAChB,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMiB,UAAU,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,MAAM1C,QAAQ,GAAG,CAAC,GAAGd,cAAc,CAAC;IACpCc,QAAQ,CAACyC,MAAM,CAAC,CAACC,MAAM,CAAC,GAAG1C,QAAQ,CAACyC,MAAM,CAAC,CAACC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG;IAC9DvD,iBAAiB,CAACa,QAAQ,CAAC;EAC7B,CAAC;;EAED;EACA,MAAM2C,aAAa,GAAGA,CAAA,KAAM;IAC1BjD,kBAAkB,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMkD,WAAW,GAAGA,CAAA,KAAM;IACxBjE,iBAAiB,CAAC,CAAC,CAAC;IACpBE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAMgE,WAAW,GAAGA,CAAA,KAAM;IACxBhE,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;;EAED;EACA,MAAMiE,WAAW,GAAGA,CAAA,KAAM;IACxBnE,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACrBE,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEhB,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,kEAAkE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/EzF,KAAA,CAAAkF,aAAA;IAAIC,SAAS,EAAC,gCAAgC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qCAAuC,CAAC,eAGvFzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,8BAA8B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CzF,KAAA,CAAAkF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAS,CAAC,eACzCzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,uCAAuC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAwB,CAAC,eACvDzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBzF,KAAA,CAAAkF,aAAA;IACEQ,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,MAAM;IACbC,QAAQ,EAAEpC,gBAAiB;IAC3BqC,GAAG,EAAEjE,YAAa;IAClBuD,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CAAC,eACFzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEA,CAAA,KAAMlE,YAAY,CAACE,OAAO,CAACiE,KAAK,CAAC,CAAE;IAC5CZ,SAAS,EAAC,sDAAsD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjE,WAEO,CAAC,eACTzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEA,CAAA,KAAMxF,cAAc,CAAC,EAAE,CAAE;IAClC6E,SAAS,EAAC,sDAAsD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjE,aAEO,CACL,CACF,CAAC,eAENzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAwB,CAAC,eACvDzF,KAAA,CAAAkF,aAAA;IACEQ,IAAI,EAAC,QAAQ;IACb3C,GAAG,EAAC,GAAG;IACPiD,GAAG,EAAC,IAAI;IACRC,KAAK,EAAE1F,OAAQ;IACfqF,QAAQ,EAAGnC,CAAC,IAAKjD,UAAU,CAAC0F,QAAQ,CAACzC,CAAC,CAACE,MAAM,CAACsC,KAAK,CAAC,IAAI,CAAC,CAAE;IAC3Dd,SAAS,EAAC,+CAA+C;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1D,CACE,CAAC,eAENzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAyB,CAAC,eACxDzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEhB,aAAc;IACvBK,SAAS,EAAC,sDAAsD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjE,WAEO,CAAC,eACTzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEb,WAAY;IACrBE,SAAS,EAAC,qDAAqD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChE,OAEO,CACL,CACF,CACF,CACF,CAAC,eAGNzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,8BAA8B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CzF,KAAA,CAAAkF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAU,CAAC,eAC1CzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,uCAAuC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAAyB,CAAC,eACxDzF,KAAA,CAAAkF,aAAA;IACEQ,IAAI,EAAC,QAAQ;IACb3C,GAAG,EAAC,GAAG;IACPkD,KAAK,EAAE9E,cAAe;IACtByE,QAAQ,EAAGnC,CAAC,IAAKrC,iBAAiB,CAAC8E,QAAQ,CAACzC,CAAC,CAACE,MAAM,CAACsC,KAAK,CAAC,IAAI,EAAE,CAAE;IACnEd,SAAS,EAAC,+CAA+C;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1D,CACE,CAAC,eAENzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAiB,CAAC,eAChDzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEA,CAAA,KAAM5E,gBAAgB,CAAC,IAAI,CAAE;IACtCiE,SAAS,EAAE,4BAA4BlE,aAAa,GAAG,0BAA0B,GAAG,aAAa,EAAG;IAAAmE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrG,MAEO,CAAC,eACTzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEA,CAAA,KAAM5E,gBAAgB,CAAC,KAAK,CAAE;IACvCiE,SAAS,EAAE,4BAA4B,CAAClE,aAAa,GAAG,wBAAwB,GAAG,aAAa,EAAG;IAAAmE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpG,MAEO,CACL,CACF,CAAC,eAENzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAe,CAAC,eAC9CzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEf,WAAY;IACrBI,SAAS,EAAC,uDAAuD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClE,OAEO,CAAC,eACTzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEd,WAAY;IACrBG,SAAS,EAAC,sDAAsD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjE,OAEO,CACL,CACF,CACF,CACF,CAAC,eAGNzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,8BAA8B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CzF,KAAA,CAAAkF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAS,CAAC,eACzCzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,uCAAuC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAA6B,CAAC,eAC5DzF,KAAA,CAAAkF,aAAA;IACEQ,IAAI,EAAC,QAAQ;IACb3C,GAAG,EAAC,GAAG;IACPiD,GAAG,EAAE3F,WAAW,CAAC2C,MAAO;IACxBiD,KAAK,EAAExF,UAAW;IAClBmF,QAAQ,EAAGnC,CAAC,IAAK/C,aAAa,CAACwF,QAAQ,CAACzC,CAAC,CAACE,MAAM,CAACsC,KAAK,CAAC,IAAI,CAAC,CAAE;IAC9Dd,SAAS,EAAC,+CAA+C;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1D,CACE,CAAC,eAENzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAA6B,CAAC,eAC5DzF,KAAA,CAAAkF,aAAA;IACEQ,IAAI,EAAC,QAAQ;IACb3C,GAAG,EAAC,GAAG;IACPiD,GAAG,EAAE3F,WAAW,CAAC2C,MAAO;IACxBiD,KAAK,EAAEtF,oBAAqB;IAC5BiF,QAAQ,EAAGnC,CAAC,IAAK7C,uBAAuB,CAACsF,QAAQ,CAACzC,CAAC,CAACE,MAAM,CAACsC,KAAK,CAAC,IAAI,CAAC,CAAE;IACxEd,SAAS,EAAC,+CAA+C;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1D,CACE,CAAC,eAENzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,YAAiB,CAAC,eAChDzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEtD,SAAU;IACnB2C,SAAS,EAAC,gEAAgE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3E,MAEO,CACL,CACF,CACF,CAAC,eAGNzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,8BAA8B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CzF,KAAA,CAAAkF,aAAA;IAAIC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAa,CAAC,eAC7CzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtCzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEA,CAAA,KAAMpE,WAAW,CAAC,MAAM,CAAE;IACnCyD,SAAS,EAAE,4BAA4B1D,QAAQ,KAAK,MAAM,GAAG,0BAA0B,GAAG,aAAa,EAAG;IAAA2D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3G,MAEO,CAAC,eACTzF,KAAA,CAAAkF,aAAA;IACEY,OAAO,EAAEA,CAAA,KAAMpE,WAAW,CAAC,MAAM,CAAE;IACnCyD,SAAS,EAAE,4BAA4B1D,QAAQ,KAAK,MAAM,GAAG,wBAAwB,GAAG,aAAa,EAAG;IAAA2D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzG,MAEO,CACL,CACF,CACF,CAAC,eAGNzF,KAAA,CAAAkF,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BzF,KAAA,CAAAkF,aAAA;IAAOC,SAAS,EAAC,+BAA+B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9CzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzF,KAAA,CAAAkF,aAAA;IAAIC,SAAS,EAAC,wCAAwC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,SAAW,CAAC,EAClEnD,KAAK,CAACY,IAAI,CAAC;IAAEF,MAAM,EAAEzC;EAAQ,CAAC,EAAE,CAAC4C,CAAC,EAAEC,CAAC,kBACpCpD,KAAA,CAAAkF,aAAA;IAAIiB,GAAG,EAAE/C,CAAE;IAAC+B,SAAS,EAAC,yDAAyD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5ErC,CAAC,GAAG,CACH,CACL,CACC,CACC,CAAC,eACRpD,KAAA,CAAAkF,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGpF,WAAW,CAAC+B,GAAG,CAAC,CAACC,IAAI,EAAEuC,MAAM,kBAC5B5E,KAAA,CAAAkF,aAAA;IAAIiB,GAAG,EAAEvB,MAAO;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACdzF,KAAA,CAAAkF,aAAA;IAAIC,SAAS,EAAC,oDAAoD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/DpD,IACC,CAAC,EACJC,KAAK,CAACY,IAAI,CAAC;IAAEF,MAAM,EAAEzC;EAAQ,CAAC,EAAE,CAAC4C,CAAC,EAAE0B,MAAM;IAAA,IAAAuB,qBAAA;IAAA,oBACzCpG,KAAA,CAAAkF,aAAA;MACEiB,GAAG,EAAEtB,MAAO;MACZM,SAAS,EAAE;AAC/B,wBAAwBN,MAAM,KAAKhE,cAAc,IAAII,aAAa,GAAG,eAAe,GAAG,UAAU;AACjG,qBAAsB;MACF6E,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACC,MAAM,EAAEC,MAAM,CAAE;MAAAO,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEzC,EAAAW,qBAAA,GAAA/E,cAAc,CAACuD,MAAM,CAAC,cAAAwB,qBAAA,uBAAtBA,qBAAA,CAAyBvB,MAAM,CAAC,kBAC/B7E,KAAA,CAAAkF,aAAA;MAAKC,SAAS,EAAC,qEAAqE;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,GAEhF,CAEL,CAAC;EAAA,CACN,CACC,CACL,CACI,CACF,CACJ,CACF,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}